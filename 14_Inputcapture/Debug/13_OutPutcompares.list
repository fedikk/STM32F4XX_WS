
13_OutPutcompares.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001bc  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000350  08000358  00010358  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000350  08000350  00010358  2**0
                  CONTENTS
  4 .ARM          00000000  08000350  08000350  00010358  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000350  08000358  00010358  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000350  08000350  00010350  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000354  08000354  00010354  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010358  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000358  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000358  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010358  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000f22  00000000  00000000  00010388  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000028b  00000000  00000000  000112aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000070  00000000  00000000  00011538  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000048  00000000  00000000  000115a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001121  00000000  00000000  000115f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000c2b  00000000  00000000  00012711  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00053bbc  00000000  00000000  0001333c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00066ef8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000a8  00000000  00000000  00066f4c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000338 	.word	0x08000338

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000338 	.word	0x08000338

080001d4 <main>:
#include "adc.h"
#include "systick.h"
#include "tim.h"


int main(void) {
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0

	tim2_PA5_output_compare();
 80001d8:	f000 f802 	bl	80001e0 <tim2_PA5_output_compare>

	while(1){
 80001dc:	e7fe      	b.n	80001dc <main+0x8>
	...

080001e0 <tim2_PA5_output_compare>:
	/*Enable Timer*/
	TIM2->CR1 |= TIM2CEN ;
}


void tim2_PA5_output_compare(void) {
 80001e0:	b480      	push	{r7}
 80001e2:	af00      	add	r7, sp, #0

	/*Enable access to GPIOA*/
	RCC->AHB1ENR |= GPIOAEN ;
 80001e4:	4b2b      	ldr	r3, [pc, #172]	; (8000294 <tim2_PA5_output_compare+0xb4>)
 80001e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001e8:	4a2a      	ldr	r2, [pc, #168]	; (8000294 <tim2_PA5_output_compare+0xb4>)
 80001ea:	f043 0301 	orr.w	r3, r3, #1
 80001ee:	6313      	str	r3, [r2, #48]	; 0x30
	/*Set the pin PA5 to an alternate function*/
	GPIOA->MODER &=~ (1U<<10);
 80001f0:	4b29      	ldr	r3, [pc, #164]	; (8000298 <tim2_PA5_output_compare+0xb8>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	4a28      	ldr	r2, [pc, #160]	; (8000298 <tim2_PA5_output_compare+0xb8>)
 80001f6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80001fa:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<11);
 80001fc:	4b26      	ldr	r3, [pc, #152]	; (8000298 <tim2_PA5_output_compare+0xb8>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a25      	ldr	r2, [pc, #148]	; (8000298 <tim2_PA5_output_compare+0xb8>)
 8000202:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000206:	6013      	str	r3, [r2, #0]
	/*SEt PA to AF01*/
	GPIOA->AFR[0] |= (1U<<20);
 8000208:	4b23      	ldr	r3, [pc, #140]	; (8000298 <tim2_PA5_output_compare+0xb8>)
 800020a:	6a1b      	ldr	r3, [r3, #32]
 800020c:	4a22      	ldr	r2, [pc, #136]	; (8000298 <tim2_PA5_output_compare+0xb8>)
 800020e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000212:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &=~(1U<<21);
 8000214:	4b20      	ldr	r3, [pc, #128]	; (8000298 <tim2_PA5_output_compare+0xb8>)
 8000216:	6a1b      	ldr	r3, [r3, #32]
 8000218:	4a1f      	ldr	r2, [pc, #124]	; (8000298 <tim2_PA5_output_compare+0xb8>)
 800021a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800021e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &=~(1U<<22);
 8000220:	4b1d      	ldr	r3, [pc, #116]	; (8000298 <tim2_PA5_output_compare+0xb8>)
 8000222:	6a1b      	ldr	r3, [r3, #32]
 8000224:	4a1c      	ldr	r2, [pc, #112]	; (8000298 <tim2_PA5_output_compare+0xb8>)
 8000226:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 800022a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &=~(1U<<23);
 800022c:	4b1a      	ldr	r3, [pc, #104]	; (8000298 <tim2_PA5_output_compare+0xb8>)
 800022e:	6a1b      	ldr	r3, [r3, #32]
 8000230:	4a19      	ldr	r2, [pc, #100]	; (8000298 <tim2_PA5_output_compare+0xb8>)
 8000232:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8000236:	6213      	str	r3, [r2, #32]
	/*Enable access to tim2 */
	RCC->APB1ENR |= TIM2EN ;
 8000238:	4b16      	ldr	r3, [pc, #88]	; (8000294 <tim2_PA5_output_compare+0xb4>)
 800023a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800023c:	4a15      	ldr	r2, [pc, #84]	; (8000294 <tim2_PA5_output_compare+0xb4>)
 800023e:	f043 0301 	orr.w	r3, r3, #1
 8000242:	6413      	str	r3, [r2, #64]	; 0x40
	/*Set the Prescaler Value*/
	TIM2->PSC = 1600 - 1 ;		// 16 000 000 / 1600 = 10 000
 8000244:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000248:	f240 623f 	movw	r2, #1599	; 0x63f
 800024c:	629a      	str	r2, [r3, #40]	; 0x28
	/*Set the auto-reload value */
	TIM2->ARR = 10000 - 1 ;
 800024e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000252:	f242 720f 	movw	r2, #9999	; 0x270f
 8000256:	62da      	str	r2, [r3, #44]	; 0x2c
	/*Set Output Compare toggle mode */
	TIM2->CCMR1 = OC_TOGGLE;
 8000258:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800025c:	2230      	movs	r2, #48	; 0x30
 800025e:	619a      	str	r2, [r3, #24]
	/*Enable Tim2 ch1 in compare mode */
	TIM2->CCER |=  TIM2_CC1E ;
 8000260:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000264:	6a1b      	ldr	r3, [r3, #32]
 8000266:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800026a:	f043 0301 	orr.w	r3, r3, #1
 800026e:	6213      	str	r3, [r2, #32]

	/*clear counter*/
	TIM2->CNT = 0 ;
 8000270:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000274:	2200      	movs	r2, #0
 8000276:	625a      	str	r2, [r3, #36]	; 0x24
	/*Enable Timer*/
	TIM2->CR1 |= TIM2CEN ;
 8000278:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000282:	f043 0301 	orr.w	r3, r3, #1
 8000286:	6013      	str	r3, [r2, #0]
}
 8000288:	bf00      	nop
 800028a:	46bd      	mov	sp, r7
 800028c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000290:	4770      	bx	lr
 8000292:	bf00      	nop
 8000294:	40023800 	.word	0x40023800
 8000298:	40020000 	.word	0x40020000

0800029c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800029c:	480d      	ldr	r0, [pc, #52]	; (80002d4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800029e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002a0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a4:	480c      	ldr	r0, [pc, #48]	; (80002d8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002a6:	490d      	ldr	r1, [pc, #52]	; (80002dc <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a8:	4a0d      	ldr	r2, [pc, #52]	; (80002e0 <LoopForever+0xe>)
  movs r3, #0
 80002aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002ac:	e002      	b.n	80002b4 <LoopCopyDataInit>

080002ae <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b2:	3304      	adds	r3, #4

080002b4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b8:	d3f9      	bcc.n	80002ae <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ba:	4a0a      	ldr	r2, [pc, #40]	; (80002e4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002bc:	4c0a      	ldr	r4, [pc, #40]	; (80002e8 <LoopForever+0x16>)
  movs r3, #0
 80002be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c0:	e001      	b.n	80002c6 <LoopFillZerobss>

080002c2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c4:	3204      	adds	r2, #4

080002c6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c8:	d3fb      	bcc.n	80002c2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ca:	f000 f811 	bl	80002f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ce:	f7ff ff81 	bl	80001d4 <main>

080002d2 <LoopForever>:

LoopForever:
    b LoopForever
 80002d2:	e7fe      	b.n	80002d2 <LoopForever>
  ldr   r0, =_estack
 80002d4:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80002d8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002dc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e0:	08000358 	.word	0x08000358
  ldr r2, =_sbss
 80002e4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002e8:	2000001c 	.word	0x2000001c

080002ec <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002ec:	e7fe      	b.n	80002ec <ADC_IRQHandler>
	...

080002f0 <__libc_init_array>:
 80002f0:	b570      	push	{r4, r5, r6, lr}
 80002f2:	4d0d      	ldr	r5, [pc, #52]	; (8000328 <__libc_init_array+0x38>)
 80002f4:	4c0d      	ldr	r4, [pc, #52]	; (800032c <__libc_init_array+0x3c>)
 80002f6:	1b64      	subs	r4, r4, r5
 80002f8:	10a4      	asrs	r4, r4, #2
 80002fa:	2600      	movs	r6, #0
 80002fc:	42a6      	cmp	r6, r4
 80002fe:	d109      	bne.n	8000314 <__libc_init_array+0x24>
 8000300:	4d0b      	ldr	r5, [pc, #44]	; (8000330 <__libc_init_array+0x40>)
 8000302:	4c0c      	ldr	r4, [pc, #48]	; (8000334 <__libc_init_array+0x44>)
 8000304:	f000 f818 	bl	8000338 <_init>
 8000308:	1b64      	subs	r4, r4, r5
 800030a:	10a4      	asrs	r4, r4, #2
 800030c:	2600      	movs	r6, #0
 800030e:	42a6      	cmp	r6, r4
 8000310:	d105      	bne.n	800031e <__libc_init_array+0x2e>
 8000312:	bd70      	pop	{r4, r5, r6, pc}
 8000314:	f855 3b04 	ldr.w	r3, [r5], #4
 8000318:	4798      	blx	r3
 800031a:	3601      	adds	r6, #1
 800031c:	e7ee      	b.n	80002fc <__libc_init_array+0xc>
 800031e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000322:	4798      	blx	r3
 8000324:	3601      	adds	r6, #1
 8000326:	e7f2      	b.n	800030e <__libc_init_array+0x1e>
 8000328:	08000350 	.word	0x08000350
 800032c:	08000350 	.word	0x08000350
 8000330:	08000350 	.word	0x08000350
 8000334:	08000354 	.word	0x08000354

08000338 <_init>:
 8000338:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800033a:	bf00      	nop
 800033c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800033e:	bc08      	pop	{r3}
 8000340:	469e      	mov	lr, r3
 8000342:	4770      	bx	lr

08000344 <_fini>:
 8000344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000346:	bf00      	nop
 8000348:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800034a:	bc08      	pop	{r3}
 800034c:	469e      	mov	lr, r3
 800034e:	4770      	bx	lr
