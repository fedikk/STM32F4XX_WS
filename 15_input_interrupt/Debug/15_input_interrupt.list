
15_input_interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001438  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ac  080015d8  080015d8  000115d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001684  08001684  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001684  08001684  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001684  08001684  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001684  08001684  00011684  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001688  08001688  00011688  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800168c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  080016f0  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  080016f0  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000343a  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000981  00000000  00000000  000234ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000198  00000000  00000000  00023e50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000140  00000000  00000000  00023fe8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002069  00000000  00000000  00024128  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001f39  00000000  00000000  00026191  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000558a9  00000000  00000000  000280ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0007d973  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ca4  00000000  00000000  0007d9c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080015c0 	.word	0x080015c0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	080015c0 	.word	0x080015c0

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000280:	b480      	push	{r7}
 8000282:	b083      	sub	sp, #12
 8000284:	af00      	add	r7, sp, #0
 8000286:	4603      	mov	r3, r0
 8000288:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800028a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800028e:	2b00      	cmp	r3, #0
 8000290:	db0b      	blt.n	80002aa <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000292:	79fb      	ldrb	r3, [r7, #7]
 8000294:	f003 021f 	and.w	r2, r3, #31
 8000298:	4907      	ldr	r1, [pc, #28]	; (80002b8 <__NVIC_EnableIRQ+0x38>)
 800029a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800029e:	095b      	lsrs	r3, r3, #5
 80002a0:	2001      	movs	r0, #1
 80002a2:	fa00 f202 	lsl.w	r2, r0, r2
 80002a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 80002aa:	bf00      	nop
 80002ac:	370c      	adds	r7, #12
 80002ae:	46bd      	mov	sp, r7
 80002b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b4:	4770      	bx	lr
 80002b6:	bf00      	nop
 80002b8:	e000e100 	.word	0xe000e100

080002bc <pc13_exti_init>:
#define GPIOCEN    (1U<<2)
#define SYSCFGEN   (1U<<14)
#define TR13	   (1U<<13)


void pc13_exti_init(void) {
 80002bc:	b580      	push	{r7, lr}
 80002be:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80002c0:	b672      	cpsid	i
}
 80002c2:	bf00      	nop

	/*Disable the global interrupts*/
	__disable_irq();
	/*Enable GPIOC CLock*/
	RCC->AHB1ENR |= GPIOCEN;
 80002c4:	4b21      	ldr	r3, [pc, #132]	; (800034c <pc13_exti_init+0x90>)
 80002c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c8:	4a20      	ldr	r2, [pc, #128]	; (800034c <pc13_exti_init+0x90>)
 80002ca:	f043 0304 	orr.w	r3, r3, #4
 80002ce:	6313      	str	r3, [r2, #48]	; 0x30

	//Set PIN pc13 Mode
	GPIOC->MODER &=~(1U<<26);
 80002d0:	4b1f      	ldr	r3, [pc, #124]	; (8000350 <pc13_exti_init+0x94>)
 80002d2:	681b      	ldr	r3, [r3, #0]
 80002d4:	4a1e      	ldr	r2, [pc, #120]	; (8000350 <pc13_exti_init+0x94>)
 80002d6:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80002da:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~(1U<<27);
 80002dc:	4b1c      	ldr	r3, [pc, #112]	; (8000350 <pc13_exti_init+0x94>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	4a1b      	ldr	r2, [pc, #108]	; (8000350 <pc13_exti_init+0x94>)
 80002e2:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 80002e6:	6013      	str	r3, [r2, #0]

	/*Enable clock to sysconfig (SYSCFG) */
	RCC->APB2ENR |= SYSCFGEN;
 80002e8:	4b18      	ldr	r3, [pc, #96]	; (800034c <pc13_exti_init+0x90>)
 80002ea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002ec:	4a17      	ldr	r2, [pc, #92]	; (800034c <pc13_exti_init+0x90>)
 80002ee:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002f2:	6453      	str	r3, [r2, #68]	; 0x44

	/*Select PORTC for EXTI13*/
	SYSCFG->EXTICR[3] |=(1U<<5);
 80002f4:	4b17      	ldr	r3, [pc, #92]	; (8000354 <pc13_exti_init+0x98>)
 80002f6:	695b      	ldr	r3, [r3, #20]
 80002f8:	4a16      	ldr	r2, [pc, #88]	; (8000354 <pc13_exti_init+0x98>)
 80002fa:	f043 0320 	orr.w	r3, r3, #32
 80002fe:	6153      	str	r3, [r2, #20]
	SYSCFG->EXTICR[3] &=~(1U<<4);
 8000300:	4b14      	ldr	r3, [pc, #80]	; (8000354 <pc13_exti_init+0x98>)
 8000302:	695b      	ldr	r3, [r3, #20]
 8000304:	4a13      	ldr	r2, [pc, #76]	; (8000354 <pc13_exti_init+0x98>)
 8000306:	f023 0310 	bic.w	r3, r3, #16
 800030a:	6153      	str	r3, [r2, #20]
	SYSCFG->EXTICR[3] &=~(1U<<6);
 800030c:	4b11      	ldr	r3, [pc, #68]	; (8000354 <pc13_exti_init+0x98>)
 800030e:	695b      	ldr	r3, [r3, #20]
 8000310:	4a10      	ldr	r2, [pc, #64]	; (8000354 <pc13_exti_init+0x98>)
 8000312:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000316:	6153      	str	r3, [r2, #20]
	SYSCFG->EXTICR[3] &=~(1U<<7);
 8000318:	4b0e      	ldr	r3, [pc, #56]	; (8000354 <pc13_exti_init+0x98>)
 800031a:	695b      	ldr	r3, [r3, #20]
 800031c:	4a0d      	ldr	r2, [pc, #52]	; (8000354 <pc13_exti_init+0x98>)
 800031e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000322:	6153      	str	r3, [r2, #20]

	/*Unmask EXTI13*/
	EXTI->IMR  |= (1<<13);
 8000324:	4b0c      	ldr	r3, [pc, #48]	; (8000358 <pc13_exti_init+0x9c>)
 8000326:	681b      	ldr	r3, [r3, #0]
 8000328:	4a0b      	ldr	r2, [pc, #44]	; (8000358 <pc13_exti_init+0x9c>)
 800032a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800032e:	6013      	str	r3, [r2, #0]

	/*Select falling edge trigger*/
	EXTI->FTSR |= TR13;
 8000330:	4b09      	ldr	r3, [pc, #36]	; (8000358 <pc13_exti_init+0x9c>)
 8000332:	68db      	ldr	r3, [r3, #12]
 8000334:	4a08      	ldr	r2, [pc, #32]	; (8000358 <pc13_exti_init+0x9c>)
 8000336:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800033a:	60d3      	str	r3, [r2, #12]

	/*Enable EXTI13 line in NVIC*/
	NVIC_EnableIRQ(EXTI15_10_IRQn);
 800033c:	2028      	movs	r0, #40	; 0x28
 800033e:	f7ff ff9f 	bl	8000280 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 8000342:	b662      	cpsie	i
}
 8000344:	bf00      	nop


	/*Enable the global interrupts*/
	__enable_irq();

}
 8000346:	bf00      	nop
 8000348:	bd80      	pop	{r7, pc}
 800034a:	bf00      	nop
 800034c:	40023800 	.word	0x40023800
 8000350:	40020800 	.word	0x40020800
 8000354:	40013800 	.word	0x40013800
 8000358:	40013c00 	.word	0x40013c00

0800035c <main>:
/*#define GPIOAEN  (1U<<0)*/
#define PIN5 		(1U<<5)
#define LED_PIN 	PIN5


int main(void) {
 800035c:	b580      	push	{r7, lr}
 800035e:	af00      	add	r7, sp, #0

	/*Enable clock to GPIOA */
	RCC->AHB1ENR 	 |= GPIOAEN;
 8000360:	4b0b      	ldr	r3, [pc, #44]	; (8000390 <main+0x34>)
 8000362:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000364:	4a0a      	ldr	r2, [pc, #40]	; (8000390 <main+0x34>)
 8000366:	f043 0301 	orr.w	r3, r3, #1
 800036a:	6313      	str	r3, [r2, #48]	; 0x30
	/*Set PA5 as an output pin*/
	GPIOA->MODER	 |= (1U<<10);
 800036c:	4b09      	ldr	r3, [pc, #36]	; (8000394 <main+0x38>)
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	4a08      	ldr	r2, [pc, #32]	; (8000394 <main+0x38>)
 8000372:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000376:	6013      	str	r3, [r2, #0]
	GPIOA->MODER	 &=~ (1U<<11);
 8000378:	4b06      	ldr	r3, [pc, #24]	; (8000394 <main+0x38>)
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	4a05      	ldr	r2, [pc, #20]	; (8000394 <main+0x38>)
 800037e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000382:	6013      	str	r3, [r2, #0]

	/*Initialisation of uart Tx and Tim2*/
	uart2_tx_init();
 8000384:	f000 f8de 	bl	8000544 <uart2_tx_init>
	pc13_exti_init();
 8000388:	f7ff ff98 	bl	80002bc <pc13_exti_init>

	while(1){
 800038c:	e7fe      	b.n	800038c <main+0x30>
 800038e:	bf00      	nop
 8000390:	40023800 	.word	0x40023800
 8000394:	40020000 	.word	0x40020000

08000398 <exti_callback>:

	}
}

static  void exti_callback(void)
{
 8000398:	b580      	push	{r7, lr}
 800039a:	af00      	add	r7, sp, #0
	printf("Btn pressed...! \n\r");
 800039c:	4805      	ldr	r0, [pc, #20]	; (80003b4 <exti_callback+0x1c>)
 800039e:	f000 f9b9 	bl	8000714 <iprintf>
	GPIOA->ODR ^=LED_PIN;
 80003a2:	4b05      	ldr	r3, [pc, #20]	; (80003b8 <exti_callback+0x20>)
 80003a4:	695b      	ldr	r3, [r3, #20]
 80003a6:	4a04      	ldr	r2, [pc, #16]	; (80003b8 <exti_callback+0x20>)
 80003a8:	f083 0320 	eor.w	r3, r3, #32
 80003ac:	6153      	str	r3, [r2, #20]
}
 80003ae:	bf00      	nop
 80003b0:	bd80      	pop	{r7, pc}
 80003b2:	bf00      	nop
 80003b4:	080015d8 	.word	0x080015d8
 80003b8:	40020000 	.word	0x40020000

080003bc <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void) {
 80003bc:	b580      	push	{r7, lr}
 80003be:	af00      	add	r7, sp, #0
	if ( (EXTI->PR & LINE13)!=0) {
 80003c0:	4b07      	ldr	r3, [pc, #28]	; (80003e0 <EXTI15_10_IRQHandler+0x24>)
 80003c2:	695b      	ldr	r3, [r3, #20]
 80003c4:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80003c8:	2b00      	cmp	r3, #0
 80003ca:	d007      	beq.n	80003dc <EXTI15_10_IRQHandler+0x20>
		/*Clear PR flag*/
		EXTI->PR |= LINE13;
 80003cc:	4b04      	ldr	r3, [pc, #16]	; (80003e0 <EXTI15_10_IRQHandler+0x24>)
 80003ce:	695b      	ldr	r3, [r3, #20]
 80003d0:	4a03      	ldr	r2, [pc, #12]	; (80003e0 <EXTI15_10_IRQHandler+0x24>)
 80003d2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80003d6:	6153      	str	r3, [r2, #20]
		//Do traitement
		exti_callback();
 80003d8:	f7ff ffde 	bl	8000398 <exti_callback>
	}
}
 80003dc:	bf00      	nop
 80003de:	bd80      	pop	{r7, pc}
 80003e0:	40013c00 	.word	0x40013c00

080003e4 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003e4:	b580      	push	{r7, lr}
 80003e6:	b086      	sub	sp, #24
 80003e8:	af00      	add	r7, sp, #0
 80003ea:	60f8      	str	r0, [r7, #12]
 80003ec:	60b9      	str	r1, [r7, #8]
 80003ee:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003f0:	2300      	movs	r3, #0
 80003f2:	617b      	str	r3, [r7, #20]
 80003f4:	e00a      	b.n	800040c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003f6:	f3af 8000 	nop.w
 80003fa:	4601      	mov	r1, r0
 80003fc:	68bb      	ldr	r3, [r7, #8]
 80003fe:	1c5a      	adds	r2, r3, #1
 8000400:	60ba      	str	r2, [r7, #8]
 8000402:	b2ca      	uxtb	r2, r1
 8000404:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000406:	697b      	ldr	r3, [r7, #20]
 8000408:	3301      	adds	r3, #1
 800040a:	617b      	str	r3, [r7, #20]
 800040c:	697a      	ldr	r2, [r7, #20]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	429a      	cmp	r2, r3
 8000412:	dbf0      	blt.n	80003f6 <_read+0x12>
	}

return len;
 8000414:	687b      	ldr	r3, [r7, #4]
}
 8000416:	4618      	mov	r0, r3
 8000418:	3718      	adds	r7, #24
 800041a:	46bd      	mov	sp, r7
 800041c:	bd80      	pop	{r7, pc}

0800041e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800041e:	b580      	push	{r7, lr}
 8000420:	b086      	sub	sp, #24
 8000422:	af00      	add	r7, sp, #0
 8000424:	60f8      	str	r0, [r7, #12]
 8000426:	60b9      	str	r1, [r7, #8]
 8000428:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800042a:	2300      	movs	r3, #0
 800042c:	617b      	str	r3, [r7, #20]
 800042e:	e009      	b.n	8000444 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000430:	68bb      	ldr	r3, [r7, #8]
 8000432:	1c5a      	adds	r2, r3, #1
 8000434:	60ba      	str	r2, [r7, #8]
 8000436:	781b      	ldrb	r3, [r3, #0]
 8000438:	4618      	mov	r0, r3
 800043a:	f000 f877 	bl	800052c <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800043e:	697b      	ldr	r3, [r7, #20]
 8000440:	3301      	adds	r3, #1
 8000442:	617b      	str	r3, [r7, #20]
 8000444:	697a      	ldr	r2, [r7, #20]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	429a      	cmp	r2, r3
 800044a:	dbf1      	blt.n	8000430 <_write+0x12>
	}
	return len;
 800044c:	687b      	ldr	r3, [r7, #4]
}
 800044e:	4618      	mov	r0, r3
 8000450:	3718      	adds	r7, #24
 8000452:	46bd      	mov	sp, r7
 8000454:	bd80      	pop	{r7, pc}

08000456 <_close>:

int _close(int file)
{
 8000456:	b480      	push	{r7}
 8000458:	b083      	sub	sp, #12
 800045a:	af00      	add	r7, sp, #0
 800045c:	6078      	str	r0, [r7, #4]
	return -1;
 800045e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000462:	4618      	mov	r0, r3
 8000464:	370c      	adds	r7, #12
 8000466:	46bd      	mov	sp, r7
 8000468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046c:	4770      	bx	lr

0800046e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800046e:	b480      	push	{r7}
 8000470:	b083      	sub	sp, #12
 8000472:	af00      	add	r7, sp, #0
 8000474:	6078      	str	r0, [r7, #4]
 8000476:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000478:	683b      	ldr	r3, [r7, #0]
 800047a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800047e:	605a      	str	r2, [r3, #4]
	return 0;
 8000480:	2300      	movs	r3, #0
}
 8000482:	4618      	mov	r0, r3
 8000484:	370c      	adds	r7, #12
 8000486:	46bd      	mov	sp, r7
 8000488:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048c:	4770      	bx	lr

0800048e <_isatty>:

int _isatty(int file)
{
 800048e:	b480      	push	{r7}
 8000490:	b083      	sub	sp, #12
 8000492:	af00      	add	r7, sp, #0
 8000494:	6078      	str	r0, [r7, #4]
	return 1;
 8000496:	2301      	movs	r3, #1
}
 8000498:	4618      	mov	r0, r3
 800049a:	370c      	adds	r7, #12
 800049c:	46bd      	mov	sp, r7
 800049e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a2:	4770      	bx	lr

080004a4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004a4:	b480      	push	{r7}
 80004a6:	b085      	sub	sp, #20
 80004a8:	af00      	add	r7, sp, #0
 80004aa:	60f8      	str	r0, [r7, #12]
 80004ac:	60b9      	str	r1, [r7, #8]
 80004ae:	607a      	str	r2, [r7, #4]
	return 0;
 80004b0:	2300      	movs	r3, #0
}
 80004b2:	4618      	mov	r0, r3
 80004b4:	3714      	adds	r7, #20
 80004b6:	46bd      	mov	sp, r7
 80004b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004bc:	4770      	bx	lr
	...

080004c0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004c0:	b580      	push	{r7, lr}
 80004c2:	b086      	sub	sp, #24
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004c8:	4a14      	ldr	r2, [pc, #80]	; (800051c <_sbrk+0x5c>)
 80004ca:	4b15      	ldr	r3, [pc, #84]	; (8000520 <_sbrk+0x60>)
 80004cc:	1ad3      	subs	r3, r2, r3
 80004ce:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004d0:	697b      	ldr	r3, [r7, #20]
 80004d2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004d4:	4b13      	ldr	r3, [pc, #76]	; (8000524 <_sbrk+0x64>)
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	2b00      	cmp	r3, #0
 80004da:	d102      	bne.n	80004e2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004dc:	4b11      	ldr	r3, [pc, #68]	; (8000524 <_sbrk+0x64>)
 80004de:	4a12      	ldr	r2, [pc, #72]	; (8000528 <_sbrk+0x68>)
 80004e0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004e2:	4b10      	ldr	r3, [pc, #64]	; (8000524 <_sbrk+0x64>)
 80004e4:	681a      	ldr	r2, [r3, #0]
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	4413      	add	r3, r2
 80004ea:	693a      	ldr	r2, [r7, #16]
 80004ec:	429a      	cmp	r2, r3
 80004ee:	d207      	bcs.n	8000500 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004f0:	f000 f8de 	bl	80006b0 <__errno>
 80004f4:	4603      	mov	r3, r0
 80004f6:	220c      	movs	r2, #12
 80004f8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004fa:	f04f 33ff 	mov.w	r3, #4294967295
 80004fe:	e009      	b.n	8000514 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000500:	4b08      	ldr	r3, [pc, #32]	; (8000524 <_sbrk+0x64>)
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000506:	4b07      	ldr	r3, [pc, #28]	; (8000524 <_sbrk+0x64>)
 8000508:	681a      	ldr	r2, [r3, #0]
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	4413      	add	r3, r2
 800050e:	4a05      	ldr	r2, [pc, #20]	; (8000524 <_sbrk+0x64>)
 8000510:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000512:	68fb      	ldr	r3, [r7, #12]
}
 8000514:	4618      	mov	r0, r3
 8000516:	3718      	adds	r7, #24
 8000518:	46bd      	mov	sp, r7
 800051a:	bd80      	pop	{r7, pc}
 800051c:	20018000 	.word	0x20018000
 8000520:	00000400 	.word	0x00000400
 8000524:	20000080 	.word	0x20000080
 8000528:	200000a0 	.word	0x200000a0

0800052c <__io_putchar>:
void uart2_tx_init(void);
void uart2_write(int ch);



int __io_putchar(int ch){
 800052c:	b580      	push	{r7, lr}
 800052e:	b082      	sub	sp, #8
 8000530:	af00      	add	r7, sp, #0
 8000532:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000534:	6878      	ldr	r0, [r7, #4]
 8000536:	f000 f879 	bl	800062c <uart2_write>
	return ch;
 800053a:	687b      	ldr	r3, [r7, #4]
}
 800053c:	4618      	mov	r0, r3
 800053e:	3708      	adds	r7, #8
 8000540:	46bd      	mov	sp, r7
 8000542:	bd80      	pop	{r7, pc}

08000544 <uart2_tx_init>:
	USART2->CR1      |= CR1_UE;

}


void  uart2_tx_init(){
 8000544:	b580      	push	{r7, lr}
 8000546:	af00      	add	r7, sp, #0
	/*configure uart GPIO pin*/
	RCC->AHB1ENR    |=  GPIOAEN;
 8000548:	4b21      	ldr	r3, [pc, #132]	; (80005d0 <uart2_tx_init+0x8c>)
 800054a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800054c:	4a20      	ldr	r2, [pc, #128]	; (80005d0 <uart2_tx_init+0x8c>)
 800054e:	f043 0301 	orr.w	r3, r3, #1
 8000552:	6313      	str	r3, [r2, #48]	; 0x30

	/* set PA2 to alternate function mode */

	GPIOA->MODER	&=~ (1U<<4);
 8000554:	4b1f      	ldr	r3, [pc, #124]	; (80005d4 <uart2_tx_init+0x90>)
 8000556:	681b      	ldr	r3, [r3, #0]
 8000558:	4a1e      	ldr	r2, [pc, #120]	; (80005d4 <uart2_tx_init+0x90>)
 800055a:	f023 0310 	bic.w	r3, r3, #16
 800055e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER	|=  (1U<<5);
 8000560:	4b1c      	ldr	r3, [pc, #112]	; (80005d4 <uart2_tx_init+0x90>)
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	4a1b      	ldr	r2, [pc, #108]	; (80005d4 <uart2_tx_init+0x90>)
 8000566:	f043 0320 	orr.w	r3, r3, #32
 800056a:	6013      	str	r3, [r2, #0]


	/*AFR[0] Pin 0..7*/
	/*AFR[1] Pin 8..15*/
	//GPIOA->AFR[0]   |=  (7<<8);
	GPIOA->AFR[0]   |=  (1<<8);
 800056c:	4b19      	ldr	r3, [pc, #100]	; (80005d4 <uart2_tx_init+0x90>)
 800056e:	6a1b      	ldr	r3, [r3, #32]
 8000570:	4a18      	ldr	r2, [pc, #96]	; (80005d4 <uart2_tx_init+0x90>)
 8000572:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000576:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]   |=  (1<<9);
 8000578:	4b16      	ldr	r3, [pc, #88]	; (80005d4 <uart2_tx_init+0x90>)
 800057a:	6a1b      	ldr	r3, [r3, #32]
 800057c:	4a15      	ldr	r2, [pc, #84]	; (80005d4 <uart2_tx_init+0x90>)
 800057e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000582:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]   |=  (1<<10);
 8000584:	4b13      	ldr	r3, [pc, #76]	; (80005d4 <uart2_tx_init+0x90>)
 8000586:	6a1b      	ldr	r3, [r3, #32]
 8000588:	4a12      	ldr	r2, [pc, #72]	; (80005d4 <uart2_tx_init+0x90>)
 800058a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800058e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]	&= ~(1U<<11);
 8000590:	4b10      	ldr	r3, [pc, #64]	; (80005d4 <uart2_tx_init+0x90>)
 8000592:	6a1b      	ldr	r3, [r3, #32]
 8000594:	4a0f      	ldr	r2, [pc, #60]	; (80005d4 <uart2_tx_init+0x90>)
 8000596:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800059a:	6213      	str	r3, [r2, #32]

	/*********************Configure the uart module***********************/
	/*enable clock to uart2*/
	RCC->APB1ENR 	 |= UART2EN;
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <uart2_tx_init+0x8c>)
 800059e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80005a0:	4a0b      	ldr	r2, [pc, #44]	; (80005d0 <uart2_tx_init+0x8c>)
 80005a2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80005a6:	6413      	str	r3, [r2, #64]	; 0x40
	/*configure bd*/
	uart_set_baudrate(USART2,APB1_CLK,UART_BAUDRATE);
 80005a8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80005ac:	490a      	ldr	r1, [pc, #40]	; (80005d8 <uart2_tx_init+0x94>)
 80005ae:	480b      	ldr	r0, [pc, #44]	; (80005dc <uart2_tx_init+0x98>)
 80005b0:	f000 f816 	bl	80005e0 <uart_set_baudrate>
	/*configure the transfer direction*/
	USART2->CR1      |= CR1_TE;
 80005b4:	4b09      	ldr	r3, [pc, #36]	; (80005dc <uart2_tx_init+0x98>)
 80005b6:	68db      	ldr	r3, [r3, #12]
 80005b8:	4a08      	ldr	r2, [pc, #32]	; (80005dc <uart2_tx_init+0x98>)
 80005ba:	f043 0308 	orr.w	r3, r3, #8
 80005be:	60d3      	str	r3, [r2, #12]
	/*enable uart module*/
	USART2->CR1      |= CR1_UE;
 80005c0:	4b06      	ldr	r3, [pc, #24]	; (80005dc <uart2_tx_init+0x98>)
 80005c2:	68db      	ldr	r3, [r3, #12]
 80005c4:	4a05      	ldr	r2, [pc, #20]	; (80005dc <uart2_tx_init+0x98>)
 80005c6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80005ca:	60d3      	str	r3, [r2, #12]

}
 80005cc:	bf00      	nop
 80005ce:	bd80      	pop	{r7, pc}
 80005d0:	40023800 	.word	0x40023800
 80005d4:	40020000 	.word	0x40020000
 80005d8:	00f42400 	.word	0x00f42400
 80005dc:	40004400 	.word	0x40004400

080005e0 <uart_set_baudrate>:

static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t PeriphClk, uint32_t BaudRate) {
 80005e0:	b580      	push	{r7, lr}
 80005e2:	b084      	sub	sp, #16
 80005e4:	af00      	add	r7, sp, #0
 80005e6:	60f8      	str	r0, [r7, #12]
 80005e8:	60b9      	str	r1, [r7, #8]
 80005ea:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(PeriphClk,BaudRate);
 80005ec:	6879      	ldr	r1, [r7, #4]
 80005ee:	68b8      	ldr	r0, [r7, #8]
 80005f0:	f000 f808 	bl	8000604 <compute_uart_bd>
 80005f4:	4603      	mov	r3, r0
 80005f6:	461a      	mov	r2, r3
 80005f8:	68fb      	ldr	r3, [r7, #12]
 80005fa:	609a      	str	r2, [r3, #8]
}
 80005fc:	bf00      	nop
 80005fe:	3710      	adds	r7, #16
 8000600:	46bd      	mov	sp, r7
 8000602:	bd80      	pop	{r7, pc}

08000604 <compute_uart_bd>:


static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate){
 8000604:	b480      	push	{r7}
 8000606:	b083      	sub	sp, #12
 8000608:	af00      	add	r7, sp, #0
 800060a:	6078      	str	r0, [r7, #4]
 800060c:	6039      	str	r1, [r7, #0]
	return ((PeriphClk+(BaudRate/2U))/BaudRate);
 800060e:	683b      	ldr	r3, [r7, #0]
 8000610:	085a      	lsrs	r2, r3, #1
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	441a      	add	r2, r3
 8000616:	683b      	ldr	r3, [r7, #0]
 8000618:	fbb2 f3f3 	udiv	r3, r2, r3
 800061c:	b29b      	uxth	r3, r3
}
 800061e:	4618      	mov	r0, r3
 8000620:	370c      	adds	r7, #12
 8000622:	46bd      	mov	sp, r7
 8000624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000628:	4770      	bx	lr
	...

0800062c <uart2_write>:
		while (!(USART2->SR & SR_RXNE)) {}   // while ((USART2->SR & SR_TXE)==0)   ma3neha mezelna 9a3din nab3thou
		/*read  data from data register*/
		return USART2->DR ;
}

void uart2_write(int ch){
 800062c:	b480      	push	{r7}
 800062e:	b083      	sub	sp, #12
 8000630:	af00      	add	r7, sp, #0
 8000632:	6078      	str	r0, [r7, #4]
	/*Make sure the transmit data register is empty*/
	while (!(USART2->SR & SR_TXE)) {}   // while ((USART2->SR & SR_TXE)==0)   ma3neha mezelna 9a3din nab3thou
 8000634:	bf00      	nop
 8000636:	4b08      	ldr	r3, [pc, #32]	; (8000658 <uart2_write+0x2c>)
 8000638:	681b      	ldr	r3, [r3, #0]
 800063a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800063e:	2b00      	cmp	r3, #0
 8000640:	d0f9      	beq.n	8000636 <uart2_write+0xa>
	/*Write to transmit data register*/
	USART2->DR = (ch & 0xFF);
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	4a04      	ldr	r2, [pc, #16]	; (8000658 <uart2_write+0x2c>)
 8000646:	b2db      	uxtb	r3, r3
 8000648:	6053      	str	r3, [r2, #4]

}
 800064a:	bf00      	nop
 800064c:	370c      	adds	r7, #12
 800064e:	46bd      	mov	sp, r7
 8000650:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000654:	4770      	bx	lr
 8000656:	bf00      	nop
 8000658:	40004400 	.word	0x40004400

0800065c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800065c:	480d      	ldr	r0, [pc, #52]	; (8000694 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800065e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000660:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000664:	480c      	ldr	r0, [pc, #48]	; (8000698 <LoopForever+0x6>)
  ldr r1, =_edata
 8000666:	490d      	ldr	r1, [pc, #52]	; (800069c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000668:	4a0d      	ldr	r2, [pc, #52]	; (80006a0 <LoopForever+0xe>)
  movs r3, #0
 800066a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800066c:	e002      	b.n	8000674 <LoopCopyDataInit>

0800066e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800066e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000670:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000672:	3304      	adds	r3, #4

08000674 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000674:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000676:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000678:	d3f9      	bcc.n	800066e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800067a:	4a0a      	ldr	r2, [pc, #40]	; (80006a4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800067c:	4c0a      	ldr	r4, [pc, #40]	; (80006a8 <LoopForever+0x16>)
  movs r3, #0
 800067e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000680:	e001      	b.n	8000686 <LoopFillZerobss>

08000682 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000682:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000684:	3204      	adds	r2, #4

08000686 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000686:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000688:	d3fb      	bcc.n	8000682 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800068a:	f000 f817 	bl	80006bc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800068e:	f7ff fe65 	bl	800035c <main>

08000692 <LoopForever>:

LoopForever:
    b LoopForever
 8000692:	e7fe      	b.n	8000692 <LoopForever>
  ldr   r0, =_estack
 8000694:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000698:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800069c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80006a0:	0800168c 	.word	0x0800168c
  ldr r2, =_sbss
 80006a4:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80006a8:	2000009c 	.word	0x2000009c

080006ac <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006ac:	e7fe      	b.n	80006ac <ADC_IRQHandler>
	...

080006b0 <__errno>:
 80006b0:	4b01      	ldr	r3, [pc, #4]	; (80006b8 <__errno+0x8>)
 80006b2:	6818      	ldr	r0, [r3, #0]
 80006b4:	4770      	bx	lr
 80006b6:	bf00      	nop
 80006b8:	20000000 	.word	0x20000000

080006bc <__libc_init_array>:
 80006bc:	b570      	push	{r4, r5, r6, lr}
 80006be:	4d0d      	ldr	r5, [pc, #52]	; (80006f4 <__libc_init_array+0x38>)
 80006c0:	4c0d      	ldr	r4, [pc, #52]	; (80006f8 <__libc_init_array+0x3c>)
 80006c2:	1b64      	subs	r4, r4, r5
 80006c4:	10a4      	asrs	r4, r4, #2
 80006c6:	2600      	movs	r6, #0
 80006c8:	42a6      	cmp	r6, r4
 80006ca:	d109      	bne.n	80006e0 <__libc_init_array+0x24>
 80006cc:	4d0b      	ldr	r5, [pc, #44]	; (80006fc <__libc_init_array+0x40>)
 80006ce:	4c0c      	ldr	r4, [pc, #48]	; (8000700 <__libc_init_array+0x44>)
 80006d0:	f000 ff76 	bl	80015c0 <_init>
 80006d4:	1b64      	subs	r4, r4, r5
 80006d6:	10a4      	asrs	r4, r4, #2
 80006d8:	2600      	movs	r6, #0
 80006da:	42a6      	cmp	r6, r4
 80006dc:	d105      	bne.n	80006ea <__libc_init_array+0x2e>
 80006de:	bd70      	pop	{r4, r5, r6, pc}
 80006e0:	f855 3b04 	ldr.w	r3, [r5], #4
 80006e4:	4798      	blx	r3
 80006e6:	3601      	adds	r6, #1
 80006e8:	e7ee      	b.n	80006c8 <__libc_init_array+0xc>
 80006ea:	f855 3b04 	ldr.w	r3, [r5], #4
 80006ee:	4798      	blx	r3
 80006f0:	3601      	adds	r6, #1
 80006f2:	e7f2      	b.n	80006da <__libc_init_array+0x1e>
 80006f4:	08001684 	.word	0x08001684
 80006f8:	08001684 	.word	0x08001684
 80006fc:	08001684 	.word	0x08001684
 8000700:	08001688 	.word	0x08001688

08000704 <memset>:
 8000704:	4402      	add	r2, r0
 8000706:	4603      	mov	r3, r0
 8000708:	4293      	cmp	r3, r2
 800070a:	d100      	bne.n	800070e <memset+0xa>
 800070c:	4770      	bx	lr
 800070e:	f803 1b01 	strb.w	r1, [r3], #1
 8000712:	e7f9      	b.n	8000708 <memset+0x4>

08000714 <iprintf>:
 8000714:	b40f      	push	{r0, r1, r2, r3}
 8000716:	4b0a      	ldr	r3, [pc, #40]	; (8000740 <iprintf+0x2c>)
 8000718:	b513      	push	{r0, r1, r4, lr}
 800071a:	681c      	ldr	r4, [r3, #0]
 800071c:	b124      	cbz	r4, 8000728 <iprintf+0x14>
 800071e:	69a3      	ldr	r3, [r4, #24]
 8000720:	b913      	cbnz	r3, 8000728 <iprintf+0x14>
 8000722:	4620      	mov	r0, r4
 8000724:	f000 f866 	bl	80007f4 <__sinit>
 8000728:	ab05      	add	r3, sp, #20
 800072a:	9a04      	ldr	r2, [sp, #16]
 800072c:	68a1      	ldr	r1, [r4, #8]
 800072e:	9301      	str	r3, [sp, #4]
 8000730:	4620      	mov	r0, r4
 8000732:	f000 f983 	bl	8000a3c <_vfiprintf_r>
 8000736:	b002      	add	sp, #8
 8000738:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800073c:	b004      	add	sp, #16
 800073e:	4770      	bx	lr
 8000740:	20000000 	.word	0x20000000

08000744 <std>:
 8000744:	2300      	movs	r3, #0
 8000746:	b510      	push	{r4, lr}
 8000748:	4604      	mov	r4, r0
 800074a:	e9c0 3300 	strd	r3, r3, [r0]
 800074e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000752:	6083      	str	r3, [r0, #8]
 8000754:	8181      	strh	r1, [r0, #12]
 8000756:	6643      	str	r3, [r0, #100]	; 0x64
 8000758:	81c2      	strh	r2, [r0, #14]
 800075a:	6183      	str	r3, [r0, #24]
 800075c:	4619      	mov	r1, r3
 800075e:	2208      	movs	r2, #8
 8000760:	305c      	adds	r0, #92	; 0x5c
 8000762:	f7ff ffcf 	bl	8000704 <memset>
 8000766:	4b05      	ldr	r3, [pc, #20]	; (800077c <std+0x38>)
 8000768:	6263      	str	r3, [r4, #36]	; 0x24
 800076a:	4b05      	ldr	r3, [pc, #20]	; (8000780 <std+0x3c>)
 800076c:	62a3      	str	r3, [r4, #40]	; 0x28
 800076e:	4b05      	ldr	r3, [pc, #20]	; (8000784 <std+0x40>)
 8000770:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000772:	4b05      	ldr	r3, [pc, #20]	; (8000788 <std+0x44>)
 8000774:	6224      	str	r4, [r4, #32]
 8000776:	6323      	str	r3, [r4, #48]	; 0x30
 8000778:	bd10      	pop	{r4, pc}
 800077a:	bf00      	nop
 800077c:	08000fe5 	.word	0x08000fe5
 8000780:	08001007 	.word	0x08001007
 8000784:	0800103f 	.word	0x0800103f
 8000788:	08001063 	.word	0x08001063

0800078c <_cleanup_r>:
 800078c:	4901      	ldr	r1, [pc, #4]	; (8000794 <_cleanup_r+0x8>)
 800078e:	f000 b8af 	b.w	80008f0 <_fwalk_reent>
 8000792:	bf00      	nop
 8000794:	0800133d 	.word	0x0800133d

08000798 <__sfmoreglue>:
 8000798:	b570      	push	{r4, r5, r6, lr}
 800079a:	1e4a      	subs	r2, r1, #1
 800079c:	2568      	movs	r5, #104	; 0x68
 800079e:	4355      	muls	r5, r2
 80007a0:	460e      	mov	r6, r1
 80007a2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80007a6:	f000 f8c5 	bl	8000934 <_malloc_r>
 80007aa:	4604      	mov	r4, r0
 80007ac:	b140      	cbz	r0, 80007c0 <__sfmoreglue+0x28>
 80007ae:	2100      	movs	r1, #0
 80007b0:	e9c0 1600 	strd	r1, r6, [r0]
 80007b4:	300c      	adds	r0, #12
 80007b6:	60a0      	str	r0, [r4, #8]
 80007b8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80007bc:	f7ff ffa2 	bl	8000704 <memset>
 80007c0:	4620      	mov	r0, r4
 80007c2:	bd70      	pop	{r4, r5, r6, pc}

080007c4 <__sfp_lock_acquire>:
 80007c4:	4801      	ldr	r0, [pc, #4]	; (80007cc <__sfp_lock_acquire+0x8>)
 80007c6:	f000 b8b3 	b.w	8000930 <__retarget_lock_acquire_recursive>
 80007ca:	bf00      	nop
 80007cc:	20000094 	.word	0x20000094

080007d0 <__sfp_lock_release>:
 80007d0:	4801      	ldr	r0, [pc, #4]	; (80007d8 <__sfp_lock_release+0x8>)
 80007d2:	f000 b8ae 	b.w	8000932 <__retarget_lock_release_recursive>
 80007d6:	bf00      	nop
 80007d8:	20000094 	.word	0x20000094

080007dc <__sinit_lock_acquire>:
 80007dc:	4801      	ldr	r0, [pc, #4]	; (80007e4 <__sinit_lock_acquire+0x8>)
 80007de:	f000 b8a7 	b.w	8000930 <__retarget_lock_acquire_recursive>
 80007e2:	bf00      	nop
 80007e4:	2000008f 	.word	0x2000008f

080007e8 <__sinit_lock_release>:
 80007e8:	4801      	ldr	r0, [pc, #4]	; (80007f0 <__sinit_lock_release+0x8>)
 80007ea:	f000 b8a2 	b.w	8000932 <__retarget_lock_release_recursive>
 80007ee:	bf00      	nop
 80007f0:	2000008f 	.word	0x2000008f

080007f4 <__sinit>:
 80007f4:	b510      	push	{r4, lr}
 80007f6:	4604      	mov	r4, r0
 80007f8:	f7ff fff0 	bl	80007dc <__sinit_lock_acquire>
 80007fc:	69a3      	ldr	r3, [r4, #24]
 80007fe:	b11b      	cbz	r3, 8000808 <__sinit+0x14>
 8000800:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000804:	f7ff bff0 	b.w	80007e8 <__sinit_lock_release>
 8000808:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800080c:	6523      	str	r3, [r4, #80]	; 0x50
 800080e:	4b13      	ldr	r3, [pc, #76]	; (800085c <__sinit+0x68>)
 8000810:	4a13      	ldr	r2, [pc, #76]	; (8000860 <__sinit+0x6c>)
 8000812:	681b      	ldr	r3, [r3, #0]
 8000814:	62a2      	str	r2, [r4, #40]	; 0x28
 8000816:	42a3      	cmp	r3, r4
 8000818:	bf04      	itt	eq
 800081a:	2301      	moveq	r3, #1
 800081c:	61a3      	streq	r3, [r4, #24]
 800081e:	4620      	mov	r0, r4
 8000820:	f000 f820 	bl	8000864 <__sfp>
 8000824:	6060      	str	r0, [r4, #4]
 8000826:	4620      	mov	r0, r4
 8000828:	f000 f81c 	bl	8000864 <__sfp>
 800082c:	60a0      	str	r0, [r4, #8]
 800082e:	4620      	mov	r0, r4
 8000830:	f000 f818 	bl	8000864 <__sfp>
 8000834:	2200      	movs	r2, #0
 8000836:	60e0      	str	r0, [r4, #12]
 8000838:	2104      	movs	r1, #4
 800083a:	6860      	ldr	r0, [r4, #4]
 800083c:	f7ff ff82 	bl	8000744 <std>
 8000840:	68a0      	ldr	r0, [r4, #8]
 8000842:	2201      	movs	r2, #1
 8000844:	2109      	movs	r1, #9
 8000846:	f7ff ff7d 	bl	8000744 <std>
 800084a:	68e0      	ldr	r0, [r4, #12]
 800084c:	2202      	movs	r2, #2
 800084e:	2112      	movs	r1, #18
 8000850:	f7ff ff78 	bl	8000744 <std>
 8000854:	2301      	movs	r3, #1
 8000856:	61a3      	str	r3, [r4, #24]
 8000858:	e7d2      	b.n	8000800 <__sinit+0xc>
 800085a:	bf00      	nop
 800085c:	080015ec 	.word	0x080015ec
 8000860:	0800078d 	.word	0x0800078d

08000864 <__sfp>:
 8000864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000866:	4607      	mov	r7, r0
 8000868:	f7ff ffac 	bl	80007c4 <__sfp_lock_acquire>
 800086c:	4b1e      	ldr	r3, [pc, #120]	; (80008e8 <__sfp+0x84>)
 800086e:	681e      	ldr	r6, [r3, #0]
 8000870:	69b3      	ldr	r3, [r6, #24]
 8000872:	b913      	cbnz	r3, 800087a <__sfp+0x16>
 8000874:	4630      	mov	r0, r6
 8000876:	f7ff ffbd 	bl	80007f4 <__sinit>
 800087a:	3648      	adds	r6, #72	; 0x48
 800087c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000880:	3b01      	subs	r3, #1
 8000882:	d503      	bpl.n	800088c <__sfp+0x28>
 8000884:	6833      	ldr	r3, [r6, #0]
 8000886:	b30b      	cbz	r3, 80008cc <__sfp+0x68>
 8000888:	6836      	ldr	r6, [r6, #0]
 800088a:	e7f7      	b.n	800087c <__sfp+0x18>
 800088c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000890:	b9d5      	cbnz	r5, 80008c8 <__sfp+0x64>
 8000892:	4b16      	ldr	r3, [pc, #88]	; (80008ec <__sfp+0x88>)
 8000894:	60e3      	str	r3, [r4, #12]
 8000896:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800089a:	6665      	str	r5, [r4, #100]	; 0x64
 800089c:	f000 f847 	bl	800092e <__retarget_lock_init_recursive>
 80008a0:	f7ff ff96 	bl	80007d0 <__sfp_lock_release>
 80008a4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80008a8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80008ac:	6025      	str	r5, [r4, #0]
 80008ae:	61a5      	str	r5, [r4, #24]
 80008b0:	2208      	movs	r2, #8
 80008b2:	4629      	mov	r1, r5
 80008b4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80008b8:	f7ff ff24 	bl	8000704 <memset>
 80008bc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80008c0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80008c4:	4620      	mov	r0, r4
 80008c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008c8:	3468      	adds	r4, #104	; 0x68
 80008ca:	e7d9      	b.n	8000880 <__sfp+0x1c>
 80008cc:	2104      	movs	r1, #4
 80008ce:	4638      	mov	r0, r7
 80008d0:	f7ff ff62 	bl	8000798 <__sfmoreglue>
 80008d4:	4604      	mov	r4, r0
 80008d6:	6030      	str	r0, [r6, #0]
 80008d8:	2800      	cmp	r0, #0
 80008da:	d1d5      	bne.n	8000888 <__sfp+0x24>
 80008dc:	f7ff ff78 	bl	80007d0 <__sfp_lock_release>
 80008e0:	230c      	movs	r3, #12
 80008e2:	603b      	str	r3, [r7, #0]
 80008e4:	e7ee      	b.n	80008c4 <__sfp+0x60>
 80008e6:	bf00      	nop
 80008e8:	080015ec 	.word	0x080015ec
 80008ec:	ffff0001 	.word	0xffff0001

080008f0 <_fwalk_reent>:
 80008f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008f4:	4606      	mov	r6, r0
 80008f6:	4688      	mov	r8, r1
 80008f8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80008fc:	2700      	movs	r7, #0
 80008fe:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000902:	f1b9 0901 	subs.w	r9, r9, #1
 8000906:	d505      	bpl.n	8000914 <_fwalk_reent+0x24>
 8000908:	6824      	ldr	r4, [r4, #0]
 800090a:	2c00      	cmp	r4, #0
 800090c:	d1f7      	bne.n	80008fe <_fwalk_reent+0xe>
 800090e:	4638      	mov	r0, r7
 8000910:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000914:	89ab      	ldrh	r3, [r5, #12]
 8000916:	2b01      	cmp	r3, #1
 8000918:	d907      	bls.n	800092a <_fwalk_reent+0x3a>
 800091a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800091e:	3301      	adds	r3, #1
 8000920:	d003      	beq.n	800092a <_fwalk_reent+0x3a>
 8000922:	4629      	mov	r1, r5
 8000924:	4630      	mov	r0, r6
 8000926:	47c0      	blx	r8
 8000928:	4307      	orrs	r7, r0
 800092a:	3568      	adds	r5, #104	; 0x68
 800092c:	e7e9      	b.n	8000902 <_fwalk_reent+0x12>

0800092e <__retarget_lock_init_recursive>:
 800092e:	4770      	bx	lr

08000930 <__retarget_lock_acquire_recursive>:
 8000930:	4770      	bx	lr

08000932 <__retarget_lock_release_recursive>:
 8000932:	4770      	bx	lr

08000934 <_malloc_r>:
 8000934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000936:	1ccd      	adds	r5, r1, #3
 8000938:	f025 0503 	bic.w	r5, r5, #3
 800093c:	3508      	adds	r5, #8
 800093e:	2d0c      	cmp	r5, #12
 8000940:	bf38      	it	cc
 8000942:	250c      	movcc	r5, #12
 8000944:	2d00      	cmp	r5, #0
 8000946:	4606      	mov	r6, r0
 8000948:	db01      	blt.n	800094e <_malloc_r+0x1a>
 800094a:	42a9      	cmp	r1, r5
 800094c:	d903      	bls.n	8000956 <_malloc_r+0x22>
 800094e:	230c      	movs	r3, #12
 8000950:	6033      	str	r3, [r6, #0]
 8000952:	2000      	movs	r0, #0
 8000954:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000956:	f000 fda3 	bl	80014a0 <__malloc_lock>
 800095a:	4921      	ldr	r1, [pc, #132]	; (80009e0 <_malloc_r+0xac>)
 800095c:	680a      	ldr	r2, [r1, #0]
 800095e:	4614      	mov	r4, r2
 8000960:	b99c      	cbnz	r4, 800098a <_malloc_r+0x56>
 8000962:	4f20      	ldr	r7, [pc, #128]	; (80009e4 <_malloc_r+0xb0>)
 8000964:	683b      	ldr	r3, [r7, #0]
 8000966:	b923      	cbnz	r3, 8000972 <_malloc_r+0x3e>
 8000968:	4621      	mov	r1, r4
 800096a:	4630      	mov	r0, r6
 800096c:	f000 fb2a 	bl	8000fc4 <_sbrk_r>
 8000970:	6038      	str	r0, [r7, #0]
 8000972:	4629      	mov	r1, r5
 8000974:	4630      	mov	r0, r6
 8000976:	f000 fb25 	bl	8000fc4 <_sbrk_r>
 800097a:	1c43      	adds	r3, r0, #1
 800097c:	d123      	bne.n	80009c6 <_malloc_r+0x92>
 800097e:	230c      	movs	r3, #12
 8000980:	6033      	str	r3, [r6, #0]
 8000982:	4630      	mov	r0, r6
 8000984:	f000 fd92 	bl	80014ac <__malloc_unlock>
 8000988:	e7e3      	b.n	8000952 <_malloc_r+0x1e>
 800098a:	6823      	ldr	r3, [r4, #0]
 800098c:	1b5b      	subs	r3, r3, r5
 800098e:	d417      	bmi.n	80009c0 <_malloc_r+0x8c>
 8000990:	2b0b      	cmp	r3, #11
 8000992:	d903      	bls.n	800099c <_malloc_r+0x68>
 8000994:	6023      	str	r3, [r4, #0]
 8000996:	441c      	add	r4, r3
 8000998:	6025      	str	r5, [r4, #0]
 800099a:	e004      	b.n	80009a6 <_malloc_r+0x72>
 800099c:	6863      	ldr	r3, [r4, #4]
 800099e:	42a2      	cmp	r2, r4
 80009a0:	bf0c      	ite	eq
 80009a2:	600b      	streq	r3, [r1, #0]
 80009a4:	6053      	strne	r3, [r2, #4]
 80009a6:	4630      	mov	r0, r6
 80009a8:	f000 fd80 	bl	80014ac <__malloc_unlock>
 80009ac:	f104 000b 	add.w	r0, r4, #11
 80009b0:	1d23      	adds	r3, r4, #4
 80009b2:	f020 0007 	bic.w	r0, r0, #7
 80009b6:	1ac2      	subs	r2, r0, r3
 80009b8:	d0cc      	beq.n	8000954 <_malloc_r+0x20>
 80009ba:	1a1b      	subs	r3, r3, r0
 80009bc:	50a3      	str	r3, [r4, r2]
 80009be:	e7c9      	b.n	8000954 <_malloc_r+0x20>
 80009c0:	4622      	mov	r2, r4
 80009c2:	6864      	ldr	r4, [r4, #4]
 80009c4:	e7cc      	b.n	8000960 <_malloc_r+0x2c>
 80009c6:	1cc4      	adds	r4, r0, #3
 80009c8:	f024 0403 	bic.w	r4, r4, #3
 80009cc:	42a0      	cmp	r0, r4
 80009ce:	d0e3      	beq.n	8000998 <_malloc_r+0x64>
 80009d0:	1a21      	subs	r1, r4, r0
 80009d2:	4630      	mov	r0, r6
 80009d4:	f000 faf6 	bl	8000fc4 <_sbrk_r>
 80009d8:	3001      	adds	r0, #1
 80009da:	d1dd      	bne.n	8000998 <_malloc_r+0x64>
 80009dc:	e7cf      	b.n	800097e <_malloc_r+0x4a>
 80009de:	bf00      	nop
 80009e0:	20000084 	.word	0x20000084
 80009e4:	20000088 	.word	0x20000088

080009e8 <__sfputc_r>:
 80009e8:	6893      	ldr	r3, [r2, #8]
 80009ea:	3b01      	subs	r3, #1
 80009ec:	2b00      	cmp	r3, #0
 80009ee:	b410      	push	{r4}
 80009f0:	6093      	str	r3, [r2, #8]
 80009f2:	da08      	bge.n	8000a06 <__sfputc_r+0x1e>
 80009f4:	6994      	ldr	r4, [r2, #24]
 80009f6:	42a3      	cmp	r3, r4
 80009f8:	db01      	blt.n	80009fe <__sfputc_r+0x16>
 80009fa:	290a      	cmp	r1, #10
 80009fc:	d103      	bne.n	8000a06 <__sfputc_r+0x1e>
 80009fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a02:	f000 bb33 	b.w	800106c <__swbuf_r>
 8000a06:	6813      	ldr	r3, [r2, #0]
 8000a08:	1c58      	adds	r0, r3, #1
 8000a0a:	6010      	str	r0, [r2, #0]
 8000a0c:	7019      	strb	r1, [r3, #0]
 8000a0e:	4608      	mov	r0, r1
 8000a10:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a14:	4770      	bx	lr

08000a16 <__sfputs_r>:
 8000a16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a18:	4606      	mov	r6, r0
 8000a1a:	460f      	mov	r7, r1
 8000a1c:	4614      	mov	r4, r2
 8000a1e:	18d5      	adds	r5, r2, r3
 8000a20:	42ac      	cmp	r4, r5
 8000a22:	d101      	bne.n	8000a28 <__sfputs_r+0x12>
 8000a24:	2000      	movs	r0, #0
 8000a26:	e007      	b.n	8000a38 <__sfputs_r+0x22>
 8000a28:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a2c:	463a      	mov	r2, r7
 8000a2e:	4630      	mov	r0, r6
 8000a30:	f7ff ffda 	bl	80009e8 <__sfputc_r>
 8000a34:	1c43      	adds	r3, r0, #1
 8000a36:	d1f3      	bne.n	8000a20 <__sfputs_r+0xa>
 8000a38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a3c <_vfiprintf_r>:
 8000a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a40:	460d      	mov	r5, r1
 8000a42:	b09d      	sub	sp, #116	; 0x74
 8000a44:	4614      	mov	r4, r2
 8000a46:	4698      	mov	r8, r3
 8000a48:	4606      	mov	r6, r0
 8000a4a:	b118      	cbz	r0, 8000a54 <_vfiprintf_r+0x18>
 8000a4c:	6983      	ldr	r3, [r0, #24]
 8000a4e:	b90b      	cbnz	r3, 8000a54 <_vfiprintf_r+0x18>
 8000a50:	f7ff fed0 	bl	80007f4 <__sinit>
 8000a54:	4b89      	ldr	r3, [pc, #548]	; (8000c7c <_vfiprintf_r+0x240>)
 8000a56:	429d      	cmp	r5, r3
 8000a58:	d11b      	bne.n	8000a92 <_vfiprintf_r+0x56>
 8000a5a:	6875      	ldr	r5, [r6, #4]
 8000a5c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a5e:	07d9      	lsls	r1, r3, #31
 8000a60:	d405      	bmi.n	8000a6e <_vfiprintf_r+0x32>
 8000a62:	89ab      	ldrh	r3, [r5, #12]
 8000a64:	059a      	lsls	r2, r3, #22
 8000a66:	d402      	bmi.n	8000a6e <_vfiprintf_r+0x32>
 8000a68:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a6a:	f7ff ff61 	bl	8000930 <__retarget_lock_acquire_recursive>
 8000a6e:	89ab      	ldrh	r3, [r5, #12]
 8000a70:	071b      	lsls	r3, r3, #28
 8000a72:	d501      	bpl.n	8000a78 <_vfiprintf_r+0x3c>
 8000a74:	692b      	ldr	r3, [r5, #16]
 8000a76:	b9eb      	cbnz	r3, 8000ab4 <_vfiprintf_r+0x78>
 8000a78:	4629      	mov	r1, r5
 8000a7a:	4630      	mov	r0, r6
 8000a7c:	f000 fb5a 	bl	8001134 <__swsetup_r>
 8000a80:	b1c0      	cbz	r0, 8000ab4 <_vfiprintf_r+0x78>
 8000a82:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a84:	07dc      	lsls	r4, r3, #31
 8000a86:	d50e      	bpl.n	8000aa6 <_vfiprintf_r+0x6a>
 8000a88:	f04f 30ff 	mov.w	r0, #4294967295
 8000a8c:	b01d      	add	sp, #116	; 0x74
 8000a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a92:	4b7b      	ldr	r3, [pc, #492]	; (8000c80 <_vfiprintf_r+0x244>)
 8000a94:	429d      	cmp	r5, r3
 8000a96:	d101      	bne.n	8000a9c <_vfiprintf_r+0x60>
 8000a98:	68b5      	ldr	r5, [r6, #8]
 8000a9a:	e7df      	b.n	8000a5c <_vfiprintf_r+0x20>
 8000a9c:	4b79      	ldr	r3, [pc, #484]	; (8000c84 <_vfiprintf_r+0x248>)
 8000a9e:	429d      	cmp	r5, r3
 8000aa0:	bf08      	it	eq
 8000aa2:	68f5      	ldreq	r5, [r6, #12]
 8000aa4:	e7da      	b.n	8000a5c <_vfiprintf_r+0x20>
 8000aa6:	89ab      	ldrh	r3, [r5, #12]
 8000aa8:	0598      	lsls	r0, r3, #22
 8000aaa:	d4ed      	bmi.n	8000a88 <_vfiprintf_r+0x4c>
 8000aac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000aae:	f7ff ff40 	bl	8000932 <__retarget_lock_release_recursive>
 8000ab2:	e7e9      	b.n	8000a88 <_vfiprintf_r+0x4c>
 8000ab4:	2300      	movs	r3, #0
 8000ab6:	9309      	str	r3, [sp, #36]	; 0x24
 8000ab8:	2320      	movs	r3, #32
 8000aba:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000abe:	f8cd 800c 	str.w	r8, [sp, #12]
 8000ac2:	2330      	movs	r3, #48	; 0x30
 8000ac4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000c88 <_vfiprintf_r+0x24c>
 8000ac8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000acc:	f04f 0901 	mov.w	r9, #1
 8000ad0:	4623      	mov	r3, r4
 8000ad2:	469a      	mov	sl, r3
 8000ad4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000ad8:	b10a      	cbz	r2, 8000ade <_vfiprintf_r+0xa2>
 8000ada:	2a25      	cmp	r2, #37	; 0x25
 8000adc:	d1f9      	bne.n	8000ad2 <_vfiprintf_r+0x96>
 8000ade:	ebba 0b04 	subs.w	fp, sl, r4
 8000ae2:	d00b      	beq.n	8000afc <_vfiprintf_r+0xc0>
 8000ae4:	465b      	mov	r3, fp
 8000ae6:	4622      	mov	r2, r4
 8000ae8:	4629      	mov	r1, r5
 8000aea:	4630      	mov	r0, r6
 8000aec:	f7ff ff93 	bl	8000a16 <__sfputs_r>
 8000af0:	3001      	adds	r0, #1
 8000af2:	f000 80aa 	beq.w	8000c4a <_vfiprintf_r+0x20e>
 8000af6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000af8:	445a      	add	r2, fp
 8000afa:	9209      	str	r2, [sp, #36]	; 0x24
 8000afc:	f89a 3000 	ldrb.w	r3, [sl]
 8000b00:	2b00      	cmp	r3, #0
 8000b02:	f000 80a2 	beq.w	8000c4a <_vfiprintf_r+0x20e>
 8000b06:	2300      	movs	r3, #0
 8000b08:	f04f 32ff 	mov.w	r2, #4294967295
 8000b0c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b10:	f10a 0a01 	add.w	sl, sl, #1
 8000b14:	9304      	str	r3, [sp, #16]
 8000b16:	9307      	str	r3, [sp, #28]
 8000b18:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b1c:	931a      	str	r3, [sp, #104]	; 0x68
 8000b1e:	4654      	mov	r4, sl
 8000b20:	2205      	movs	r2, #5
 8000b22:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b26:	4858      	ldr	r0, [pc, #352]	; (8000c88 <_vfiprintf_r+0x24c>)
 8000b28:	f7ff fb5a 	bl	80001e0 <memchr>
 8000b2c:	9a04      	ldr	r2, [sp, #16]
 8000b2e:	b9d8      	cbnz	r0, 8000b68 <_vfiprintf_r+0x12c>
 8000b30:	06d1      	lsls	r1, r2, #27
 8000b32:	bf44      	itt	mi
 8000b34:	2320      	movmi	r3, #32
 8000b36:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b3a:	0713      	lsls	r3, r2, #28
 8000b3c:	bf44      	itt	mi
 8000b3e:	232b      	movmi	r3, #43	; 0x2b
 8000b40:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b44:	f89a 3000 	ldrb.w	r3, [sl]
 8000b48:	2b2a      	cmp	r3, #42	; 0x2a
 8000b4a:	d015      	beq.n	8000b78 <_vfiprintf_r+0x13c>
 8000b4c:	9a07      	ldr	r2, [sp, #28]
 8000b4e:	4654      	mov	r4, sl
 8000b50:	2000      	movs	r0, #0
 8000b52:	f04f 0c0a 	mov.w	ip, #10
 8000b56:	4621      	mov	r1, r4
 8000b58:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b5c:	3b30      	subs	r3, #48	; 0x30
 8000b5e:	2b09      	cmp	r3, #9
 8000b60:	d94e      	bls.n	8000c00 <_vfiprintf_r+0x1c4>
 8000b62:	b1b0      	cbz	r0, 8000b92 <_vfiprintf_r+0x156>
 8000b64:	9207      	str	r2, [sp, #28]
 8000b66:	e014      	b.n	8000b92 <_vfiprintf_r+0x156>
 8000b68:	eba0 0308 	sub.w	r3, r0, r8
 8000b6c:	fa09 f303 	lsl.w	r3, r9, r3
 8000b70:	4313      	orrs	r3, r2
 8000b72:	9304      	str	r3, [sp, #16]
 8000b74:	46a2      	mov	sl, r4
 8000b76:	e7d2      	b.n	8000b1e <_vfiprintf_r+0xe2>
 8000b78:	9b03      	ldr	r3, [sp, #12]
 8000b7a:	1d19      	adds	r1, r3, #4
 8000b7c:	681b      	ldr	r3, [r3, #0]
 8000b7e:	9103      	str	r1, [sp, #12]
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	bfbb      	ittet	lt
 8000b84:	425b      	neglt	r3, r3
 8000b86:	f042 0202 	orrlt.w	r2, r2, #2
 8000b8a:	9307      	strge	r3, [sp, #28]
 8000b8c:	9307      	strlt	r3, [sp, #28]
 8000b8e:	bfb8      	it	lt
 8000b90:	9204      	strlt	r2, [sp, #16]
 8000b92:	7823      	ldrb	r3, [r4, #0]
 8000b94:	2b2e      	cmp	r3, #46	; 0x2e
 8000b96:	d10c      	bne.n	8000bb2 <_vfiprintf_r+0x176>
 8000b98:	7863      	ldrb	r3, [r4, #1]
 8000b9a:	2b2a      	cmp	r3, #42	; 0x2a
 8000b9c:	d135      	bne.n	8000c0a <_vfiprintf_r+0x1ce>
 8000b9e:	9b03      	ldr	r3, [sp, #12]
 8000ba0:	1d1a      	adds	r2, r3, #4
 8000ba2:	681b      	ldr	r3, [r3, #0]
 8000ba4:	9203      	str	r2, [sp, #12]
 8000ba6:	2b00      	cmp	r3, #0
 8000ba8:	bfb8      	it	lt
 8000baa:	f04f 33ff 	movlt.w	r3, #4294967295
 8000bae:	3402      	adds	r4, #2
 8000bb0:	9305      	str	r3, [sp, #20]
 8000bb2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000c98 <_vfiprintf_r+0x25c>
 8000bb6:	7821      	ldrb	r1, [r4, #0]
 8000bb8:	2203      	movs	r2, #3
 8000bba:	4650      	mov	r0, sl
 8000bbc:	f7ff fb10 	bl	80001e0 <memchr>
 8000bc0:	b140      	cbz	r0, 8000bd4 <_vfiprintf_r+0x198>
 8000bc2:	2340      	movs	r3, #64	; 0x40
 8000bc4:	eba0 000a 	sub.w	r0, r0, sl
 8000bc8:	fa03 f000 	lsl.w	r0, r3, r0
 8000bcc:	9b04      	ldr	r3, [sp, #16]
 8000bce:	4303      	orrs	r3, r0
 8000bd0:	3401      	adds	r4, #1
 8000bd2:	9304      	str	r3, [sp, #16]
 8000bd4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bd8:	482c      	ldr	r0, [pc, #176]	; (8000c8c <_vfiprintf_r+0x250>)
 8000bda:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000bde:	2206      	movs	r2, #6
 8000be0:	f7ff fafe 	bl	80001e0 <memchr>
 8000be4:	2800      	cmp	r0, #0
 8000be6:	d03f      	beq.n	8000c68 <_vfiprintf_r+0x22c>
 8000be8:	4b29      	ldr	r3, [pc, #164]	; (8000c90 <_vfiprintf_r+0x254>)
 8000bea:	bb1b      	cbnz	r3, 8000c34 <_vfiprintf_r+0x1f8>
 8000bec:	9b03      	ldr	r3, [sp, #12]
 8000bee:	3307      	adds	r3, #7
 8000bf0:	f023 0307 	bic.w	r3, r3, #7
 8000bf4:	3308      	adds	r3, #8
 8000bf6:	9303      	str	r3, [sp, #12]
 8000bf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000bfa:	443b      	add	r3, r7
 8000bfc:	9309      	str	r3, [sp, #36]	; 0x24
 8000bfe:	e767      	b.n	8000ad0 <_vfiprintf_r+0x94>
 8000c00:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c04:	460c      	mov	r4, r1
 8000c06:	2001      	movs	r0, #1
 8000c08:	e7a5      	b.n	8000b56 <_vfiprintf_r+0x11a>
 8000c0a:	2300      	movs	r3, #0
 8000c0c:	3401      	adds	r4, #1
 8000c0e:	9305      	str	r3, [sp, #20]
 8000c10:	4619      	mov	r1, r3
 8000c12:	f04f 0c0a 	mov.w	ip, #10
 8000c16:	4620      	mov	r0, r4
 8000c18:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c1c:	3a30      	subs	r2, #48	; 0x30
 8000c1e:	2a09      	cmp	r2, #9
 8000c20:	d903      	bls.n	8000c2a <_vfiprintf_r+0x1ee>
 8000c22:	2b00      	cmp	r3, #0
 8000c24:	d0c5      	beq.n	8000bb2 <_vfiprintf_r+0x176>
 8000c26:	9105      	str	r1, [sp, #20]
 8000c28:	e7c3      	b.n	8000bb2 <_vfiprintf_r+0x176>
 8000c2a:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c2e:	4604      	mov	r4, r0
 8000c30:	2301      	movs	r3, #1
 8000c32:	e7f0      	b.n	8000c16 <_vfiprintf_r+0x1da>
 8000c34:	ab03      	add	r3, sp, #12
 8000c36:	9300      	str	r3, [sp, #0]
 8000c38:	462a      	mov	r2, r5
 8000c3a:	4b16      	ldr	r3, [pc, #88]	; (8000c94 <_vfiprintf_r+0x258>)
 8000c3c:	a904      	add	r1, sp, #16
 8000c3e:	4630      	mov	r0, r6
 8000c40:	f3af 8000 	nop.w
 8000c44:	4607      	mov	r7, r0
 8000c46:	1c78      	adds	r0, r7, #1
 8000c48:	d1d6      	bne.n	8000bf8 <_vfiprintf_r+0x1bc>
 8000c4a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c4c:	07d9      	lsls	r1, r3, #31
 8000c4e:	d405      	bmi.n	8000c5c <_vfiprintf_r+0x220>
 8000c50:	89ab      	ldrh	r3, [r5, #12]
 8000c52:	059a      	lsls	r2, r3, #22
 8000c54:	d402      	bmi.n	8000c5c <_vfiprintf_r+0x220>
 8000c56:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c58:	f7ff fe6b 	bl	8000932 <__retarget_lock_release_recursive>
 8000c5c:	89ab      	ldrh	r3, [r5, #12]
 8000c5e:	065b      	lsls	r3, r3, #25
 8000c60:	f53f af12 	bmi.w	8000a88 <_vfiprintf_r+0x4c>
 8000c64:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c66:	e711      	b.n	8000a8c <_vfiprintf_r+0x50>
 8000c68:	ab03      	add	r3, sp, #12
 8000c6a:	9300      	str	r3, [sp, #0]
 8000c6c:	462a      	mov	r2, r5
 8000c6e:	4b09      	ldr	r3, [pc, #36]	; (8000c94 <_vfiprintf_r+0x258>)
 8000c70:	a904      	add	r1, sp, #16
 8000c72:	4630      	mov	r0, r6
 8000c74:	f000 f880 	bl	8000d78 <_printf_i>
 8000c78:	e7e4      	b.n	8000c44 <_vfiprintf_r+0x208>
 8000c7a:	bf00      	nop
 8000c7c:	08001610 	.word	0x08001610
 8000c80:	08001630 	.word	0x08001630
 8000c84:	080015f0 	.word	0x080015f0
 8000c88:	08001650 	.word	0x08001650
 8000c8c:	0800165a 	.word	0x0800165a
 8000c90:	00000000 	.word	0x00000000
 8000c94:	08000a17 	.word	0x08000a17
 8000c98:	08001656 	.word	0x08001656

08000c9c <_printf_common>:
 8000c9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ca0:	4616      	mov	r6, r2
 8000ca2:	4699      	mov	r9, r3
 8000ca4:	688a      	ldr	r2, [r1, #8]
 8000ca6:	690b      	ldr	r3, [r1, #16]
 8000ca8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000cac:	4293      	cmp	r3, r2
 8000cae:	bfb8      	it	lt
 8000cb0:	4613      	movlt	r3, r2
 8000cb2:	6033      	str	r3, [r6, #0]
 8000cb4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000cb8:	4607      	mov	r7, r0
 8000cba:	460c      	mov	r4, r1
 8000cbc:	b10a      	cbz	r2, 8000cc2 <_printf_common+0x26>
 8000cbe:	3301      	adds	r3, #1
 8000cc0:	6033      	str	r3, [r6, #0]
 8000cc2:	6823      	ldr	r3, [r4, #0]
 8000cc4:	0699      	lsls	r1, r3, #26
 8000cc6:	bf42      	ittt	mi
 8000cc8:	6833      	ldrmi	r3, [r6, #0]
 8000cca:	3302      	addmi	r3, #2
 8000ccc:	6033      	strmi	r3, [r6, #0]
 8000cce:	6825      	ldr	r5, [r4, #0]
 8000cd0:	f015 0506 	ands.w	r5, r5, #6
 8000cd4:	d106      	bne.n	8000ce4 <_printf_common+0x48>
 8000cd6:	f104 0a19 	add.w	sl, r4, #25
 8000cda:	68e3      	ldr	r3, [r4, #12]
 8000cdc:	6832      	ldr	r2, [r6, #0]
 8000cde:	1a9b      	subs	r3, r3, r2
 8000ce0:	42ab      	cmp	r3, r5
 8000ce2:	dc26      	bgt.n	8000d32 <_printf_common+0x96>
 8000ce4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000ce8:	1e13      	subs	r3, r2, #0
 8000cea:	6822      	ldr	r2, [r4, #0]
 8000cec:	bf18      	it	ne
 8000cee:	2301      	movne	r3, #1
 8000cf0:	0692      	lsls	r2, r2, #26
 8000cf2:	d42b      	bmi.n	8000d4c <_printf_common+0xb0>
 8000cf4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000cf8:	4649      	mov	r1, r9
 8000cfa:	4638      	mov	r0, r7
 8000cfc:	47c0      	blx	r8
 8000cfe:	3001      	adds	r0, #1
 8000d00:	d01e      	beq.n	8000d40 <_printf_common+0xa4>
 8000d02:	6823      	ldr	r3, [r4, #0]
 8000d04:	68e5      	ldr	r5, [r4, #12]
 8000d06:	6832      	ldr	r2, [r6, #0]
 8000d08:	f003 0306 	and.w	r3, r3, #6
 8000d0c:	2b04      	cmp	r3, #4
 8000d0e:	bf08      	it	eq
 8000d10:	1aad      	subeq	r5, r5, r2
 8000d12:	68a3      	ldr	r3, [r4, #8]
 8000d14:	6922      	ldr	r2, [r4, #16]
 8000d16:	bf0c      	ite	eq
 8000d18:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d1c:	2500      	movne	r5, #0
 8000d1e:	4293      	cmp	r3, r2
 8000d20:	bfc4      	itt	gt
 8000d22:	1a9b      	subgt	r3, r3, r2
 8000d24:	18ed      	addgt	r5, r5, r3
 8000d26:	2600      	movs	r6, #0
 8000d28:	341a      	adds	r4, #26
 8000d2a:	42b5      	cmp	r5, r6
 8000d2c:	d11a      	bne.n	8000d64 <_printf_common+0xc8>
 8000d2e:	2000      	movs	r0, #0
 8000d30:	e008      	b.n	8000d44 <_printf_common+0xa8>
 8000d32:	2301      	movs	r3, #1
 8000d34:	4652      	mov	r2, sl
 8000d36:	4649      	mov	r1, r9
 8000d38:	4638      	mov	r0, r7
 8000d3a:	47c0      	blx	r8
 8000d3c:	3001      	adds	r0, #1
 8000d3e:	d103      	bne.n	8000d48 <_printf_common+0xac>
 8000d40:	f04f 30ff 	mov.w	r0, #4294967295
 8000d44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d48:	3501      	adds	r5, #1
 8000d4a:	e7c6      	b.n	8000cda <_printf_common+0x3e>
 8000d4c:	18e1      	adds	r1, r4, r3
 8000d4e:	1c5a      	adds	r2, r3, #1
 8000d50:	2030      	movs	r0, #48	; 0x30
 8000d52:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d56:	4422      	add	r2, r4
 8000d58:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d5c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d60:	3302      	adds	r3, #2
 8000d62:	e7c7      	b.n	8000cf4 <_printf_common+0x58>
 8000d64:	2301      	movs	r3, #1
 8000d66:	4622      	mov	r2, r4
 8000d68:	4649      	mov	r1, r9
 8000d6a:	4638      	mov	r0, r7
 8000d6c:	47c0      	blx	r8
 8000d6e:	3001      	adds	r0, #1
 8000d70:	d0e6      	beq.n	8000d40 <_printf_common+0xa4>
 8000d72:	3601      	adds	r6, #1
 8000d74:	e7d9      	b.n	8000d2a <_printf_common+0x8e>
	...

08000d78 <_printf_i>:
 8000d78:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d7c:	460c      	mov	r4, r1
 8000d7e:	4691      	mov	r9, r2
 8000d80:	7e27      	ldrb	r7, [r4, #24]
 8000d82:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000d84:	2f78      	cmp	r7, #120	; 0x78
 8000d86:	4680      	mov	r8, r0
 8000d88:	469a      	mov	sl, r3
 8000d8a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d8e:	d807      	bhi.n	8000da0 <_printf_i+0x28>
 8000d90:	2f62      	cmp	r7, #98	; 0x62
 8000d92:	d80a      	bhi.n	8000daa <_printf_i+0x32>
 8000d94:	2f00      	cmp	r7, #0
 8000d96:	f000 80d8 	beq.w	8000f4a <_printf_i+0x1d2>
 8000d9a:	2f58      	cmp	r7, #88	; 0x58
 8000d9c:	f000 80a3 	beq.w	8000ee6 <_printf_i+0x16e>
 8000da0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000da4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000da8:	e03a      	b.n	8000e20 <_printf_i+0xa8>
 8000daa:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000dae:	2b15      	cmp	r3, #21
 8000db0:	d8f6      	bhi.n	8000da0 <_printf_i+0x28>
 8000db2:	a001      	add	r0, pc, #4	; (adr r0, 8000db8 <_printf_i+0x40>)
 8000db4:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000db8:	08000e11 	.word	0x08000e11
 8000dbc:	08000e25 	.word	0x08000e25
 8000dc0:	08000da1 	.word	0x08000da1
 8000dc4:	08000da1 	.word	0x08000da1
 8000dc8:	08000da1 	.word	0x08000da1
 8000dcc:	08000da1 	.word	0x08000da1
 8000dd0:	08000e25 	.word	0x08000e25
 8000dd4:	08000da1 	.word	0x08000da1
 8000dd8:	08000da1 	.word	0x08000da1
 8000ddc:	08000da1 	.word	0x08000da1
 8000de0:	08000da1 	.word	0x08000da1
 8000de4:	08000f31 	.word	0x08000f31
 8000de8:	08000e55 	.word	0x08000e55
 8000dec:	08000f13 	.word	0x08000f13
 8000df0:	08000da1 	.word	0x08000da1
 8000df4:	08000da1 	.word	0x08000da1
 8000df8:	08000f53 	.word	0x08000f53
 8000dfc:	08000da1 	.word	0x08000da1
 8000e00:	08000e55 	.word	0x08000e55
 8000e04:	08000da1 	.word	0x08000da1
 8000e08:	08000da1 	.word	0x08000da1
 8000e0c:	08000f1b 	.word	0x08000f1b
 8000e10:	680b      	ldr	r3, [r1, #0]
 8000e12:	1d1a      	adds	r2, r3, #4
 8000e14:	681b      	ldr	r3, [r3, #0]
 8000e16:	600a      	str	r2, [r1, #0]
 8000e18:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000e1c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e20:	2301      	movs	r3, #1
 8000e22:	e0a3      	b.n	8000f6c <_printf_i+0x1f4>
 8000e24:	6825      	ldr	r5, [r4, #0]
 8000e26:	6808      	ldr	r0, [r1, #0]
 8000e28:	062e      	lsls	r6, r5, #24
 8000e2a:	f100 0304 	add.w	r3, r0, #4
 8000e2e:	d50a      	bpl.n	8000e46 <_printf_i+0xce>
 8000e30:	6805      	ldr	r5, [r0, #0]
 8000e32:	600b      	str	r3, [r1, #0]
 8000e34:	2d00      	cmp	r5, #0
 8000e36:	da03      	bge.n	8000e40 <_printf_i+0xc8>
 8000e38:	232d      	movs	r3, #45	; 0x2d
 8000e3a:	426d      	negs	r5, r5
 8000e3c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e40:	485e      	ldr	r0, [pc, #376]	; (8000fbc <_printf_i+0x244>)
 8000e42:	230a      	movs	r3, #10
 8000e44:	e019      	b.n	8000e7a <_printf_i+0x102>
 8000e46:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000e4a:	6805      	ldr	r5, [r0, #0]
 8000e4c:	600b      	str	r3, [r1, #0]
 8000e4e:	bf18      	it	ne
 8000e50:	b22d      	sxthne	r5, r5
 8000e52:	e7ef      	b.n	8000e34 <_printf_i+0xbc>
 8000e54:	680b      	ldr	r3, [r1, #0]
 8000e56:	6825      	ldr	r5, [r4, #0]
 8000e58:	1d18      	adds	r0, r3, #4
 8000e5a:	6008      	str	r0, [r1, #0]
 8000e5c:	0628      	lsls	r0, r5, #24
 8000e5e:	d501      	bpl.n	8000e64 <_printf_i+0xec>
 8000e60:	681d      	ldr	r5, [r3, #0]
 8000e62:	e002      	b.n	8000e6a <_printf_i+0xf2>
 8000e64:	0669      	lsls	r1, r5, #25
 8000e66:	d5fb      	bpl.n	8000e60 <_printf_i+0xe8>
 8000e68:	881d      	ldrh	r5, [r3, #0]
 8000e6a:	4854      	ldr	r0, [pc, #336]	; (8000fbc <_printf_i+0x244>)
 8000e6c:	2f6f      	cmp	r7, #111	; 0x6f
 8000e6e:	bf0c      	ite	eq
 8000e70:	2308      	moveq	r3, #8
 8000e72:	230a      	movne	r3, #10
 8000e74:	2100      	movs	r1, #0
 8000e76:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e7a:	6866      	ldr	r6, [r4, #4]
 8000e7c:	60a6      	str	r6, [r4, #8]
 8000e7e:	2e00      	cmp	r6, #0
 8000e80:	bfa2      	ittt	ge
 8000e82:	6821      	ldrge	r1, [r4, #0]
 8000e84:	f021 0104 	bicge.w	r1, r1, #4
 8000e88:	6021      	strge	r1, [r4, #0]
 8000e8a:	b90d      	cbnz	r5, 8000e90 <_printf_i+0x118>
 8000e8c:	2e00      	cmp	r6, #0
 8000e8e:	d04d      	beq.n	8000f2c <_printf_i+0x1b4>
 8000e90:	4616      	mov	r6, r2
 8000e92:	fbb5 f1f3 	udiv	r1, r5, r3
 8000e96:	fb03 5711 	mls	r7, r3, r1, r5
 8000e9a:	5dc7      	ldrb	r7, [r0, r7]
 8000e9c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000ea0:	462f      	mov	r7, r5
 8000ea2:	42bb      	cmp	r3, r7
 8000ea4:	460d      	mov	r5, r1
 8000ea6:	d9f4      	bls.n	8000e92 <_printf_i+0x11a>
 8000ea8:	2b08      	cmp	r3, #8
 8000eaa:	d10b      	bne.n	8000ec4 <_printf_i+0x14c>
 8000eac:	6823      	ldr	r3, [r4, #0]
 8000eae:	07df      	lsls	r7, r3, #31
 8000eb0:	d508      	bpl.n	8000ec4 <_printf_i+0x14c>
 8000eb2:	6923      	ldr	r3, [r4, #16]
 8000eb4:	6861      	ldr	r1, [r4, #4]
 8000eb6:	4299      	cmp	r1, r3
 8000eb8:	bfde      	ittt	le
 8000eba:	2330      	movle	r3, #48	; 0x30
 8000ebc:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000ec0:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000ec4:	1b92      	subs	r2, r2, r6
 8000ec6:	6122      	str	r2, [r4, #16]
 8000ec8:	f8cd a000 	str.w	sl, [sp]
 8000ecc:	464b      	mov	r3, r9
 8000ece:	aa03      	add	r2, sp, #12
 8000ed0:	4621      	mov	r1, r4
 8000ed2:	4640      	mov	r0, r8
 8000ed4:	f7ff fee2 	bl	8000c9c <_printf_common>
 8000ed8:	3001      	adds	r0, #1
 8000eda:	d14c      	bne.n	8000f76 <_printf_i+0x1fe>
 8000edc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ee0:	b004      	add	sp, #16
 8000ee2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ee6:	4835      	ldr	r0, [pc, #212]	; (8000fbc <_printf_i+0x244>)
 8000ee8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000eec:	6823      	ldr	r3, [r4, #0]
 8000eee:	680e      	ldr	r6, [r1, #0]
 8000ef0:	061f      	lsls	r7, r3, #24
 8000ef2:	f856 5b04 	ldr.w	r5, [r6], #4
 8000ef6:	600e      	str	r6, [r1, #0]
 8000ef8:	d514      	bpl.n	8000f24 <_printf_i+0x1ac>
 8000efa:	07d9      	lsls	r1, r3, #31
 8000efc:	bf44      	itt	mi
 8000efe:	f043 0320 	orrmi.w	r3, r3, #32
 8000f02:	6023      	strmi	r3, [r4, #0]
 8000f04:	b91d      	cbnz	r5, 8000f0e <_printf_i+0x196>
 8000f06:	6823      	ldr	r3, [r4, #0]
 8000f08:	f023 0320 	bic.w	r3, r3, #32
 8000f0c:	6023      	str	r3, [r4, #0]
 8000f0e:	2310      	movs	r3, #16
 8000f10:	e7b0      	b.n	8000e74 <_printf_i+0xfc>
 8000f12:	6823      	ldr	r3, [r4, #0]
 8000f14:	f043 0320 	orr.w	r3, r3, #32
 8000f18:	6023      	str	r3, [r4, #0]
 8000f1a:	2378      	movs	r3, #120	; 0x78
 8000f1c:	4828      	ldr	r0, [pc, #160]	; (8000fc0 <_printf_i+0x248>)
 8000f1e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000f22:	e7e3      	b.n	8000eec <_printf_i+0x174>
 8000f24:	065e      	lsls	r6, r3, #25
 8000f26:	bf48      	it	mi
 8000f28:	b2ad      	uxthmi	r5, r5
 8000f2a:	e7e6      	b.n	8000efa <_printf_i+0x182>
 8000f2c:	4616      	mov	r6, r2
 8000f2e:	e7bb      	b.n	8000ea8 <_printf_i+0x130>
 8000f30:	680b      	ldr	r3, [r1, #0]
 8000f32:	6826      	ldr	r6, [r4, #0]
 8000f34:	6960      	ldr	r0, [r4, #20]
 8000f36:	1d1d      	adds	r5, r3, #4
 8000f38:	600d      	str	r5, [r1, #0]
 8000f3a:	0635      	lsls	r5, r6, #24
 8000f3c:	681b      	ldr	r3, [r3, #0]
 8000f3e:	d501      	bpl.n	8000f44 <_printf_i+0x1cc>
 8000f40:	6018      	str	r0, [r3, #0]
 8000f42:	e002      	b.n	8000f4a <_printf_i+0x1d2>
 8000f44:	0671      	lsls	r1, r6, #25
 8000f46:	d5fb      	bpl.n	8000f40 <_printf_i+0x1c8>
 8000f48:	8018      	strh	r0, [r3, #0]
 8000f4a:	2300      	movs	r3, #0
 8000f4c:	6123      	str	r3, [r4, #16]
 8000f4e:	4616      	mov	r6, r2
 8000f50:	e7ba      	b.n	8000ec8 <_printf_i+0x150>
 8000f52:	680b      	ldr	r3, [r1, #0]
 8000f54:	1d1a      	adds	r2, r3, #4
 8000f56:	600a      	str	r2, [r1, #0]
 8000f58:	681e      	ldr	r6, [r3, #0]
 8000f5a:	6862      	ldr	r2, [r4, #4]
 8000f5c:	2100      	movs	r1, #0
 8000f5e:	4630      	mov	r0, r6
 8000f60:	f7ff f93e 	bl	80001e0 <memchr>
 8000f64:	b108      	cbz	r0, 8000f6a <_printf_i+0x1f2>
 8000f66:	1b80      	subs	r0, r0, r6
 8000f68:	6060      	str	r0, [r4, #4]
 8000f6a:	6863      	ldr	r3, [r4, #4]
 8000f6c:	6123      	str	r3, [r4, #16]
 8000f6e:	2300      	movs	r3, #0
 8000f70:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f74:	e7a8      	b.n	8000ec8 <_printf_i+0x150>
 8000f76:	6923      	ldr	r3, [r4, #16]
 8000f78:	4632      	mov	r2, r6
 8000f7a:	4649      	mov	r1, r9
 8000f7c:	4640      	mov	r0, r8
 8000f7e:	47d0      	blx	sl
 8000f80:	3001      	adds	r0, #1
 8000f82:	d0ab      	beq.n	8000edc <_printf_i+0x164>
 8000f84:	6823      	ldr	r3, [r4, #0]
 8000f86:	079b      	lsls	r3, r3, #30
 8000f88:	d413      	bmi.n	8000fb2 <_printf_i+0x23a>
 8000f8a:	68e0      	ldr	r0, [r4, #12]
 8000f8c:	9b03      	ldr	r3, [sp, #12]
 8000f8e:	4298      	cmp	r0, r3
 8000f90:	bfb8      	it	lt
 8000f92:	4618      	movlt	r0, r3
 8000f94:	e7a4      	b.n	8000ee0 <_printf_i+0x168>
 8000f96:	2301      	movs	r3, #1
 8000f98:	4632      	mov	r2, r6
 8000f9a:	4649      	mov	r1, r9
 8000f9c:	4640      	mov	r0, r8
 8000f9e:	47d0      	blx	sl
 8000fa0:	3001      	adds	r0, #1
 8000fa2:	d09b      	beq.n	8000edc <_printf_i+0x164>
 8000fa4:	3501      	adds	r5, #1
 8000fa6:	68e3      	ldr	r3, [r4, #12]
 8000fa8:	9903      	ldr	r1, [sp, #12]
 8000faa:	1a5b      	subs	r3, r3, r1
 8000fac:	42ab      	cmp	r3, r5
 8000fae:	dcf2      	bgt.n	8000f96 <_printf_i+0x21e>
 8000fb0:	e7eb      	b.n	8000f8a <_printf_i+0x212>
 8000fb2:	2500      	movs	r5, #0
 8000fb4:	f104 0619 	add.w	r6, r4, #25
 8000fb8:	e7f5      	b.n	8000fa6 <_printf_i+0x22e>
 8000fba:	bf00      	nop
 8000fbc:	08001661 	.word	0x08001661
 8000fc0:	08001672 	.word	0x08001672

08000fc4 <_sbrk_r>:
 8000fc4:	b538      	push	{r3, r4, r5, lr}
 8000fc6:	4d06      	ldr	r5, [pc, #24]	; (8000fe0 <_sbrk_r+0x1c>)
 8000fc8:	2300      	movs	r3, #0
 8000fca:	4604      	mov	r4, r0
 8000fcc:	4608      	mov	r0, r1
 8000fce:	602b      	str	r3, [r5, #0]
 8000fd0:	f7ff fa76 	bl	80004c0 <_sbrk>
 8000fd4:	1c43      	adds	r3, r0, #1
 8000fd6:	d102      	bne.n	8000fde <_sbrk_r+0x1a>
 8000fd8:	682b      	ldr	r3, [r5, #0]
 8000fda:	b103      	cbz	r3, 8000fde <_sbrk_r+0x1a>
 8000fdc:	6023      	str	r3, [r4, #0]
 8000fde:	bd38      	pop	{r3, r4, r5, pc}
 8000fe0:	20000098 	.word	0x20000098

08000fe4 <__sread>:
 8000fe4:	b510      	push	{r4, lr}
 8000fe6:	460c      	mov	r4, r1
 8000fe8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fec:	f000 fab4 	bl	8001558 <_read_r>
 8000ff0:	2800      	cmp	r0, #0
 8000ff2:	bfab      	itete	ge
 8000ff4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000ff6:	89a3      	ldrhlt	r3, [r4, #12]
 8000ff8:	181b      	addge	r3, r3, r0
 8000ffa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ffe:	bfac      	ite	ge
 8001000:	6563      	strge	r3, [r4, #84]	; 0x54
 8001002:	81a3      	strhlt	r3, [r4, #12]
 8001004:	bd10      	pop	{r4, pc}

08001006 <__swrite>:
 8001006:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800100a:	461f      	mov	r7, r3
 800100c:	898b      	ldrh	r3, [r1, #12]
 800100e:	05db      	lsls	r3, r3, #23
 8001010:	4605      	mov	r5, r0
 8001012:	460c      	mov	r4, r1
 8001014:	4616      	mov	r6, r2
 8001016:	d505      	bpl.n	8001024 <__swrite+0x1e>
 8001018:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800101c:	2302      	movs	r3, #2
 800101e:	2200      	movs	r2, #0
 8001020:	f000 f9c8 	bl	80013b4 <_lseek_r>
 8001024:	89a3      	ldrh	r3, [r4, #12]
 8001026:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800102a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800102e:	81a3      	strh	r3, [r4, #12]
 8001030:	4632      	mov	r2, r6
 8001032:	463b      	mov	r3, r7
 8001034:	4628      	mov	r0, r5
 8001036:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800103a:	f000 b869 	b.w	8001110 <_write_r>

0800103e <__sseek>:
 800103e:	b510      	push	{r4, lr}
 8001040:	460c      	mov	r4, r1
 8001042:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001046:	f000 f9b5 	bl	80013b4 <_lseek_r>
 800104a:	1c43      	adds	r3, r0, #1
 800104c:	89a3      	ldrh	r3, [r4, #12]
 800104e:	bf15      	itete	ne
 8001050:	6560      	strne	r0, [r4, #84]	; 0x54
 8001052:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001056:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800105a:	81a3      	strheq	r3, [r4, #12]
 800105c:	bf18      	it	ne
 800105e:	81a3      	strhne	r3, [r4, #12]
 8001060:	bd10      	pop	{r4, pc}

08001062 <__sclose>:
 8001062:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001066:	f000 b8d3 	b.w	8001210 <_close_r>
	...

0800106c <__swbuf_r>:
 800106c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800106e:	460e      	mov	r6, r1
 8001070:	4614      	mov	r4, r2
 8001072:	4605      	mov	r5, r0
 8001074:	b118      	cbz	r0, 800107e <__swbuf_r+0x12>
 8001076:	6983      	ldr	r3, [r0, #24]
 8001078:	b90b      	cbnz	r3, 800107e <__swbuf_r+0x12>
 800107a:	f7ff fbbb 	bl	80007f4 <__sinit>
 800107e:	4b21      	ldr	r3, [pc, #132]	; (8001104 <__swbuf_r+0x98>)
 8001080:	429c      	cmp	r4, r3
 8001082:	d12b      	bne.n	80010dc <__swbuf_r+0x70>
 8001084:	686c      	ldr	r4, [r5, #4]
 8001086:	69a3      	ldr	r3, [r4, #24]
 8001088:	60a3      	str	r3, [r4, #8]
 800108a:	89a3      	ldrh	r3, [r4, #12]
 800108c:	071a      	lsls	r2, r3, #28
 800108e:	d52f      	bpl.n	80010f0 <__swbuf_r+0x84>
 8001090:	6923      	ldr	r3, [r4, #16]
 8001092:	b36b      	cbz	r3, 80010f0 <__swbuf_r+0x84>
 8001094:	6923      	ldr	r3, [r4, #16]
 8001096:	6820      	ldr	r0, [r4, #0]
 8001098:	1ac0      	subs	r0, r0, r3
 800109a:	6963      	ldr	r3, [r4, #20]
 800109c:	b2f6      	uxtb	r6, r6
 800109e:	4283      	cmp	r3, r0
 80010a0:	4637      	mov	r7, r6
 80010a2:	dc04      	bgt.n	80010ae <__swbuf_r+0x42>
 80010a4:	4621      	mov	r1, r4
 80010a6:	4628      	mov	r0, r5
 80010a8:	f000 f948 	bl	800133c <_fflush_r>
 80010ac:	bb30      	cbnz	r0, 80010fc <__swbuf_r+0x90>
 80010ae:	68a3      	ldr	r3, [r4, #8]
 80010b0:	3b01      	subs	r3, #1
 80010b2:	60a3      	str	r3, [r4, #8]
 80010b4:	6823      	ldr	r3, [r4, #0]
 80010b6:	1c5a      	adds	r2, r3, #1
 80010b8:	6022      	str	r2, [r4, #0]
 80010ba:	701e      	strb	r6, [r3, #0]
 80010bc:	6963      	ldr	r3, [r4, #20]
 80010be:	3001      	adds	r0, #1
 80010c0:	4283      	cmp	r3, r0
 80010c2:	d004      	beq.n	80010ce <__swbuf_r+0x62>
 80010c4:	89a3      	ldrh	r3, [r4, #12]
 80010c6:	07db      	lsls	r3, r3, #31
 80010c8:	d506      	bpl.n	80010d8 <__swbuf_r+0x6c>
 80010ca:	2e0a      	cmp	r6, #10
 80010cc:	d104      	bne.n	80010d8 <__swbuf_r+0x6c>
 80010ce:	4621      	mov	r1, r4
 80010d0:	4628      	mov	r0, r5
 80010d2:	f000 f933 	bl	800133c <_fflush_r>
 80010d6:	b988      	cbnz	r0, 80010fc <__swbuf_r+0x90>
 80010d8:	4638      	mov	r0, r7
 80010da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010dc:	4b0a      	ldr	r3, [pc, #40]	; (8001108 <__swbuf_r+0x9c>)
 80010de:	429c      	cmp	r4, r3
 80010e0:	d101      	bne.n	80010e6 <__swbuf_r+0x7a>
 80010e2:	68ac      	ldr	r4, [r5, #8]
 80010e4:	e7cf      	b.n	8001086 <__swbuf_r+0x1a>
 80010e6:	4b09      	ldr	r3, [pc, #36]	; (800110c <__swbuf_r+0xa0>)
 80010e8:	429c      	cmp	r4, r3
 80010ea:	bf08      	it	eq
 80010ec:	68ec      	ldreq	r4, [r5, #12]
 80010ee:	e7ca      	b.n	8001086 <__swbuf_r+0x1a>
 80010f0:	4621      	mov	r1, r4
 80010f2:	4628      	mov	r0, r5
 80010f4:	f000 f81e 	bl	8001134 <__swsetup_r>
 80010f8:	2800      	cmp	r0, #0
 80010fa:	d0cb      	beq.n	8001094 <__swbuf_r+0x28>
 80010fc:	f04f 37ff 	mov.w	r7, #4294967295
 8001100:	e7ea      	b.n	80010d8 <__swbuf_r+0x6c>
 8001102:	bf00      	nop
 8001104:	08001610 	.word	0x08001610
 8001108:	08001630 	.word	0x08001630
 800110c:	080015f0 	.word	0x080015f0

08001110 <_write_r>:
 8001110:	b538      	push	{r3, r4, r5, lr}
 8001112:	4d07      	ldr	r5, [pc, #28]	; (8001130 <_write_r+0x20>)
 8001114:	4604      	mov	r4, r0
 8001116:	4608      	mov	r0, r1
 8001118:	4611      	mov	r1, r2
 800111a:	2200      	movs	r2, #0
 800111c:	602a      	str	r2, [r5, #0]
 800111e:	461a      	mov	r2, r3
 8001120:	f7ff f97d 	bl	800041e <_write>
 8001124:	1c43      	adds	r3, r0, #1
 8001126:	d102      	bne.n	800112e <_write_r+0x1e>
 8001128:	682b      	ldr	r3, [r5, #0]
 800112a:	b103      	cbz	r3, 800112e <_write_r+0x1e>
 800112c:	6023      	str	r3, [r4, #0]
 800112e:	bd38      	pop	{r3, r4, r5, pc}
 8001130:	20000098 	.word	0x20000098

08001134 <__swsetup_r>:
 8001134:	4b32      	ldr	r3, [pc, #200]	; (8001200 <__swsetup_r+0xcc>)
 8001136:	b570      	push	{r4, r5, r6, lr}
 8001138:	681d      	ldr	r5, [r3, #0]
 800113a:	4606      	mov	r6, r0
 800113c:	460c      	mov	r4, r1
 800113e:	b125      	cbz	r5, 800114a <__swsetup_r+0x16>
 8001140:	69ab      	ldr	r3, [r5, #24]
 8001142:	b913      	cbnz	r3, 800114a <__swsetup_r+0x16>
 8001144:	4628      	mov	r0, r5
 8001146:	f7ff fb55 	bl	80007f4 <__sinit>
 800114a:	4b2e      	ldr	r3, [pc, #184]	; (8001204 <__swsetup_r+0xd0>)
 800114c:	429c      	cmp	r4, r3
 800114e:	d10f      	bne.n	8001170 <__swsetup_r+0x3c>
 8001150:	686c      	ldr	r4, [r5, #4]
 8001152:	89a3      	ldrh	r3, [r4, #12]
 8001154:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001158:	0719      	lsls	r1, r3, #28
 800115a:	d42c      	bmi.n	80011b6 <__swsetup_r+0x82>
 800115c:	06dd      	lsls	r5, r3, #27
 800115e:	d411      	bmi.n	8001184 <__swsetup_r+0x50>
 8001160:	2309      	movs	r3, #9
 8001162:	6033      	str	r3, [r6, #0]
 8001164:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001168:	81a3      	strh	r3, [r4, #12]
 800116a:	f04f 30ff 	mov.w	r0, #4294967295
 800116e:	e03e      	b.n	80011ee <__swsetup_r+0xba>
 8001170:	4b25      	ldr	r3, [pc, #148]	; (8001208 <__swsetup_r+0xd4>)
 8001172:	429c      	cmp	r4, r3
 8001174:	d101      	bne.n	800117a <__swsetup_r+0x46>
 8001176:	68ac      	ldr	r4, [r5, #8]
 8001178:	e7eb      	b.n	8001152 <__swsetup_r+0x1e>
 800117a:	4b24      	ldr	r3, [pc, #144]	; (800120c <__swsetup_r+0xd8>)
 800117c:	429c      	cmp	r4, r3
 800117e:	bf08      	it	eq
 8001180:	68ec      	ldreq	r4, [r5, #12]
 8001182:	e7e6      	b.n	8001152 <__swsetup_r+0x1e>
 8001184:	0758      	lsls	r0, r3, #29
 8001186:	d512      	bpl.n	80011ae <__swsetup_r+0x7a>
 8001188:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800118a:	b141      	cbz	r1, 800119e <__swsetup_r+0x6a>
 800118c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001190:	4299      	cmp	r1, r3
 8001192:	d002      	beq.n	800119a <__swsetup_r+0x66>
 8001194:	4630      	mov	r0, r6
 8001196:	f000 f98f 	bl	80014b8 <_free_r>
 800119a:	2300      	movs	r3, #0
 800119c:	6363      	str	r3, [r4, #52]	; 0x34
 800119e:	89a3      	ldrh	r3, [r4, #12]
 80011a0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80011a4:	81a3      	strh	r3, [r4, #12]
 80011a6:	2300      	movs	r3, #0
 80011a8:	6063      	str	r3, [r4, #4]
 80011aa:	6923      	ldr	r3, [r4, #16]
 80011ac:	6023      	str	r3, [r4, #0]
 80011ae:	89a3      	ldrh	r3, [r4, #12]
 80011b0:	f043 0308 	orr.w	r3, r3, #8
 80011b4:	81a3      	strh	r3, [r4, #12]
 80011b6:	6923      	ldr	r3, [r4, #16]
 80011b8:	b94b      	cbnz	r3, 80011ce <__swsetup_r+0x9a>
 80011ba:	89a3      	ldrh	r3, [r4, #12]
 80011bc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80011c0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80011c4:	d003      	beq.n	80011ce <__swsetup_r+0x9a>
 80011c6:	4621      	mov	r1, r4
 80011c8:	4630      	mov	r0, r6
 80011ca:	f000 f929 	bl	8001420 <__smakebuf_r>
 80011ce:	89a0      	ldrh	r0, [r4, #12]
 80011d0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011d4:	f010 0301 	ands.w	r3, r0, #1
 80011d8:	d00a      	beq.n	80011f0 <__swsetup_r+0xbc>
 80011da:	2300      	movs	r3, #0
 80011dc:	60a3      	str	r3, [r4, #8]
 80011de:	6963      	ldr	r3, [r4, #20]
 80011e0:	425b      	negs	r3, r3
 80011e2:	61a3      	str	r3, [r4, #24]
 80011e4:	6923      	ldr	r3, [r4, #16]
 80011e6:	b943      	cbnz	r3, 80011fa <__swsetup_r+0xc6>
 80011e8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011ec:	d1ba      	bne.n	8001164 <__swsetup_r+0x30>
 80011ee:	bd70      	pop	{r4, r5, r6, pc}
 80011f0:	0781      	lsls	r1, r0, #30
 80011f2:	bf58      	it	pl
 80011f4:	6963      	ldrpl	r3, [r4, #20]
 80011f6:	60a3      	str	r3, [r4, #8]
 80011f8:	e7f4      	b.n	80011e4 <__swsetup_r+0xb0>
 80011fa:	2000      	movs	r0, #0
 80011fc:	e7f7      	b.n	80011ee <__swsetup_r+0xba>
 80011fe:	bf00      	nop
 8001200:	20000000 	.word	0x20000000
 8001204:	08001610 	.word	0x08001610
 8001208:	08001630 	.word	0x08001630
 800120c:	080015f0 	.word	0x080015f0

08001210 <_close_r>:
 8001210:	b538      	push	{r3, r4, r5, lr}
 8001212:	4d06      	ldr	r5, [pc, #24]	; (800122c <_close_r+0x1c>)
 8001214:	2300      	movs	r3, #0
 8001216:	4604      	mov	r4, r0
 8001218:	4608      	mov	r0, r1
 800121a:	602b      	str	r3, [r5, #0]
 800121c:	f7ff f91b 	bl	8000456 <_close>
 8001220:	1c43      	adds	r3, r0, #1
 8001222:	d102      	bne.n	800122a <_close_r+0x1a>
 8001224:	682b      	ldr	r3, [r5, #0]
 8001226:	b103      	cbz	r3, 800122a <_close_r+0x1a>
 8001228:	6023      	str	r3, [r4, #0]
 800122a:	bd38      	pop	{r3, r4, r5, pc}
 800122c:	20000098 	.word	0x20000098

08001230 <__sflush_r>:
 8001230:	898a      	ldrh	r2, [r1, #12]
 8001232:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001236:	4605      	mov	r5, r0
 8001238:	0710      	lsls	r0, r2, #28
 800123a:	460c      	mov	r4, r1
 800123c:	d458      	bmi.n	80012f0 <__sflush_r+0xc0>
 800123e:	684b      	ldr	r3, [r1, #4]
 8001240:	2b00      	cmp	r3, #0
 8001242:	dc05      	bgt.n	8001250 <__sflush_r+0x20>
 8001244:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001246:	2b00      	cmp	r3, #0
 8001248:	dc02      	bgt.n	8001250 <__sflush_r+0x20>
 800124a:	2000      	movs	r0, #0
 800124c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001250:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001252:	2e00      	cmp	r6, #0
 8001254:	d0f9      	beq.n	800124a <__sflush_r+0x1a>
 8001256:	2300      	movs	r3, #0
 8001258:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800125c:	682f      	ldr	r7, [r5, #0]
 800125e:	602b      	str	r3, [r5, #0]
 8001260:	d032      	beq.n	80012c8 <__sflush_r+0x98>
 8001262:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001264:	89a3      	ldrh	r3, [r4, #12]
 8001266:	075a      	lsls	r2, r3, #29
 8001268:	d505      	bpl.n	8001276 <__sflush_r+0x46>
 800126a:	6863      	ldr	r3, [r4, #4]
 800126c:	1ac0      	subs	r0, r0, r3
 800126e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001270:	b10b      	cbz	r3, 8001276 <__sflush_r+0x46>
 8001272:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001274:	1ac0      	subs	r0, r0, r3
 8001276:	2300      	movs	r3, #0
 8001278:	4602      	mov	r2, r0
 800127a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800127c:	6a21      	ldr	r1, [r4, #32]
 800127e:	4628      	mov	r0, r5
 8001280:	47b0      	blx	r6
 8001282:	1c43      	adds	r3, r0, #1
 8001284:	89a3      	ldrh	r3, [r4, #12]
 8001286:	d106      	bne.n	8001296 <__sflush_r+0x66>
 8001288:	6829      	ldr	r1, [r5, #0]
 800128a:	291d      	cmp	r1, #29
 800128c:	d82c      	bhi.n	80012e8 <__sflush_r+0xb8>
 800128e:	4a2a      	ldr	r2, [pc, #168]	; (8001338 <__sflush_r+0x108>)
 8001290:	40ca      	lsrs	r2, r1
 8001292:	07d6      	lsls	r6, r2, #31
 8001294:	d528      	bpl.n	80012e8 <__sflush_r+0xb8>
 8001296:	2200      	movs	r2, #0
 8001298:	6062      	str	r2, [r4, #4]
 800129a:	04d9      	lsls	r1, r3, #19
 800129c:	6922      	ldr	r2, [r4, #16]
 800129e:	6022      	str	r2, [r4, #0]
 80012a0:	d504      	bpl.n	80012ac <__sflush_r+0x7c>
 80012a2:	1c42      	adds	r2, r0, #1
 80012a4:	d101      	bne.n	80012aa <__sflush_r+0x7a>
 80012a6:	682b      	ldr	r3, [r5, #0]
 80012a8:	b903      	cbnz	r3, 80012ac <__sflush_r+0x7c>
 80012aa:	6560      	str	r0, [r4, #84]	; 0x54
 80012ac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80012ae:	602f      	str	r7, [r5, #0]
 80012b0:	2900      	cmp	r1, #0
 80012b2:	d0ca      	beq.n	800124a <__sflush_r+0x1a>
 80012b4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80012b8:	4299      	cmp	r1, r3
 80012ba:	d002      	beq.n	80012c2 <__sflush_r+0x92>
 80012bc:	4628      	mov	r0, r5
 80012be:	f000 f8fb 	bl	80014b8 <_free_r>
 80012c2:	2000      	movs	r0, #0
 80012c4:	6360      	str	r0, [r4, #52]	; 0x34
 80012c6:	e7c1      	b.n	800124c <__sflush_r+0x1c>
 80012c8:	6a21      	ldr	r1, [r4, #32]
 80012ca:	2301      	movs	r3, #1
 80012cc:	4628      	mov	r0, r5
 80012ce:	47b0      	blx	r6
 80012d0:	1c41      	adds	r1, r0, #1
 80012d2:	d1c7      	bne.n	8001264 <__sflush_r+0x34>
 80012d4:	682b      	ldr	r3, [r5, #0]
 80012d6:	2b00      	cmp	r3, #0
 80012d8:	d0c4      	beq.n	8001264 <__sflush_r+0x34>
 80012da:	2b1d      	cmp	r3, #29
 80012dc:	d001      	beq.n	80012e2 <__sflush_r+0xb2>
 80012de:	2b16      	cmp	r3, #22
 80012e0:	d101      	bne.n	80012e6 <__sflush_r+0xb6>
 80012e2:	602f      	str	r7, [r5, #0]
 80012e4:	e7b1      	b.n	800124a <__sflush_r+0x1a>
 80012e6:	89a3      	ldrh	r3, [r4, #12]
 80012e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012ec:	81a3      	strh	r3, [r4, #12]
 80012ee:	e7ad      	b.n	800124c <__sflush_r+0x1c>
 80012f0:	690f      	ldr	r7, [r1, #16]
 80012f2:	2f00      	cmp	r7, #0
 80012f4:	d0a9      	beq.n	800124a <__sflush_r+0x1a>
 80012f6:	0793      	lsls	r3, r2, #30
 80012f8:	680e      	ldr	r6, [r1, #0]
 80012fa:	bf08      	it	eq
 80012fc:	694b      	ldreq	r3, [r1, #20]
 80012fe:	600f      	str	r7, [r1, #0]
 8001300:	bf18      	it	ne
 8001302:	2300      	movne	r3, #0
 8001304:	eba6 0807 	sub.w	r8, r6, r7
 8001308:	608b      	str	r3, [r1, #8]
 800130a:	f1b8 0f00 	cmp.w	r8, #0
 800130e:	dd9c      	ble.n	800124a <__sflush_r+0x1a>
 8001310:	6a21      	ldr	r1, [r4, #32]
 8001312:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001314:	4643      	mov	r3, r8
 8001316:	463a      	mov	r2, r7
 8001318:	4628      	mov	r0, r5
 800131a:	47b0      	blx	r6
 800131c:	2800      	cmp	r0, #0
 800131e:	dc06      	bgt.n	800132e <__sflush_r+0xfe>
 8001320:	89a3      	ldrh	r3, [r4, #12]
 8001322:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001326:	81a3      	strh	r3, [r4, #12]
 8001328:	f04f 30ff 	mov.w	r0, #4294967295
 800132c:	e78e      	b.n	800124c <__sflush_r+0x1c>
 800132e:	4407      	add	r7, r0
 8001330:	eba8 0800 	sub.w	r8, r8, r0
 8001334:	e7e9      	b.n	800130a <__sflush_r+0xda>
 8001336:	bf00      	nop
 8001338:	20400001 	.word	0x20400001

0800133c <_fflush_r>:
 800133c:	b538      	push	{r3, r4, r5, lr}
 800133e:	690b      	ldr	r3, [r1, #16]
 8001340:	4605      	mov	r5, r0
 8001342:	460c      	mov	r4, r1
 8001344:	b913      	cbnz	r3, 800134c <_fflush_r+0x10>
 8001346:	2500      	movs	r5, #0
 8001348:	4628      	mov	r0, r5
 800134a:	bd38      	pop	{r3, r4, r5, pc}
 800134c:	b118      	cbz	r0, 8001356 <_fflush_r+0x1a>
 800134e:	6983      	ldr	r3, [r0, #24]
 8001350:	b90b      	cbnz	r3, 8001356 <_fflush_r+0x1a>
 8001352:	f7ff fa4f 	bl	80007f4 <__sinit>
 8001356:	4b14      	ldr	r3, [pc, #80]	; (80013a8 <_fflush_r+0x6c>)
 8001358:	429c      	cmp	r4, r3
 800135a:	d11b      	bne.n	8001394 <_fflush_r+0x58>
 800135c:	686c      	ldr	r4, [r5, #4]
 800135e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001362:	2b00      	cmp	r3, #0
 8001364:	d0ef      	beq.n	8001346 <_fflush_r+0xa>
 8001366:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001368:	07d0      	lsls	r0, r2, #31
 800136a:	d404      	bmi.n	8001376 <_fflush_r+0x3a>
 800136c:	0599      	lsls	r1, r3, #22
 800136e:	d402      	bmi.n	8001376 <_fflush_r+0x3a>
 8001370:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001372:	f7ff fadd 	bl	8000930 <__retarget_lock_acquire_recursive>
 8001376:	4628      	mov	r0, r5
 8001378:	4621      	mov	r1, r4
 800137a:	f7ff ff59 	bl	8001230 <__sflush_r>
 800137e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001380:	07da      	lsls	r2, r3, #31
 8001382:	4605      	mov	r5, r0
 8001384:	d4e0      	bmi.n	8001348 <_fflush_r+0xc>
 8001386:	89a3      	ldrh	r3, [r4, #12]
 8001388:	059b      	lsls	r3, r3, #22
 800138a:	d4dd      	bmi.n	8001348 <_fflush_r+0xc>
 800138c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800138e:	f7ff fad0 	bl	8000932 <__retarget_lock_release_recursive>
 8001392:	e7d9      	b.n	8001348 <_fflush_r+0xc>
 8001394:	4b05      	ldr	r3, [pc, #20]	; (80013ac <_fflush_r+0x70>)
 8001396:	429c      	cmp	r4, r3
 8001398:	d101      	bne.n	800139e <_fflush_r+0x62>
 800139a:	68ac      	ldr	r4, [r5, #8]
 800139c:	e7df      	b.n	800135e <_fflush_r+0x22>
 800139e:	4b04      	ldr	r3, [pc, #16]	; (80013b0 <_fflush_r+0x74>)
 80013a0:	429c      	cmp	r4, r3
 80013a2:	bf08      	it	eq
 80013a4:	68ec      	ldreq	r4, [r5, #12]
 80013a6:	e7da      	b.n	800135e <_fflush_r+0x22>
 80013a8:	08001610 	.word	0x08001610
 80013ac:	08001630 	.word	0x08001630
 80013b0:	080015f0 	.word	0x080015f0

080013b4 <_lseek_r>:
 80013b4:	b538      	push	{r3, r4, r5, lr}
 80013b6:	4d07      	ldr	r5, [pc, #28]	; (80013d4 <_lseek_r+0x20>)
 80013b8:	4604      	mov	r4, r0
 80013ba:	4608      	mov	r0, r1
 80013bc:	4611      	mov	r1, r2
 80013be:	2200      	movs	r2, #0
 80013c0:	602a      	str	r2, [r5, #0]
 80013c2:	461a      	mov	r2, r3
 80013c4:	f7ff f86e 	bl	80004a4 <_lseek>
 80013c8:	1c43      	adds	r3, r0, #1
 80013ca:	d102      	bne.n	80013d2 <_lseek_r+0x1e>
 80013cc:	682b      	ldr	r3, [r5, #0]
 80013ce:	b103      	cbz	r3, 80013d2 <_lseek_r+0x1e>
 80013d0:	6023      	str	r3, [r4, #0]
 80013d2:	bd38      	pop	{r3, r4, r5, pc}
 80013d4:	20000098 	.word	0x20000098

080013d8 <__swhatbuf_r>:
 80013d8:	b570      	push	{r4, r5, r6, lr}
 80013da:	460e      	mov	r6, r1
 80013dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013e0:	2900      	cmp	r1, #0
 80013e2:	b096      	sub	sp, #88	; 0x58
 80013e4:	4614      	mov	r4, r2
 80013e6:	461d      	mov	r5, r3
 80013e8:	da07      	bge.n	80013fa <__swhatbuf_r+0x22>
 80013ea:	2300      	movs	r3, #0
 80013ec:	602b      	str	r3, [r5, #0]
 80013ee:	89b3      	ldrh	r3, [r6, #12]
 80013f0:	061a      	lsls	r2, r3, #24
 80013f2:	d410      	bmi.n	8001416 <__swhatbuf_r+0x3e>
 80013f4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80013f8:	e00e      	b.n	8001418 <__swhatbuf_r+0x40>
 80013fa:	466a      	mov	r2, sp
 80013fc:	f000 f8be 	bl	800157c <_fstat_r>
 8001400:	2800      	cmp	r0, #0
 8001402:	dbf2      	blt.n	80013ea <__swhatbuf_r+0x12>
 8001404:	9a01      	ldr	r2, [sp, #4]
 8001406:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800140a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800140e:	425a      	negs	r2, r3
 8001410:	415a      	adcs	r2, r3
 8001412:	602a      	str	r2, [r5, #0]
 8001414:	e7ee      	b.n	80013f4 <__swhatbuf_r+0x1c>
 8001416:	2340      	movs	r3, #64	; 0x40
 8001418:	2000      	movs	r0, #0
 800141a:	6023      	str	r3, [r4, #0]
 800141c:	b016      	add	sp, #88	; 0x58
 800141e:	bd70      	pop	{r4, r5, r6, pc}

08001420 <__smakebuf_r>:
 8001420:	898b      	ldrh	r3, [r1, #12]
 8001422:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001424:	079d      	lsls	r5, r3, #30
 8001426:	4606      	mov	r6, r0
 8001428:	460c      	mov	r4, r1
 800142a:	d507      	bpl.n	800143c <__smakebuf_r+0x1c>
 800142c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001430:	6023      	str	r3, [r4, #0]
 8001432:	6123      	str	r3, [r4, #16]
 8001434:	2301      	movs	r3, #1
 8001436:	6163      	str	r3, [r4, #20]
 8001438:	b002      	add	sp, #8
 800143a:	bd70      	pop	{r4, r5, r6, pc}
 800143c:	ab01      	add	r3, sp, #4
 800143e:	466a      	mov	r2, sp
 8001440:	f7ff ffca 	bl	80013d8 <__swhatbuf_r>
 8001444:	9900      	ldr	r1, [sp, #0]
 8001446:	4605      	mov	r5, r0
 8001448:	4630      	mov	r0, r6
 800144a:	f7ff fa73 	bl	8000934 <_malloc_r>
 800144e:	b948      	cbnz	r0, 8001464 <__smakebuf_r+0x44>
 8001450:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001454:	059a      	lsls	r2, r3, #22
 8001456:	d4ef      	bmi.n	8001438 <__smakebuf_r+0x18>
 8001458:	f023 0303 	bic.w	r3, r3, #3
 800145c:	f043 0302 	orr.w	r3, r3, #2
 8001460:	81a3      	strh	r3, [r4, #12]
 8001462:	e7e3      	b.n	800142c <__smakebuf_r+0xc>
 8001464:	4b0d      	ldr	r3, [pc, #52]	; (800149c <__smakebuf_r+0x7c>)
 8001466:	62b3      	str	r3, [r6, #40]	; 0x28
 8001468:	89a3      	ldrh	r3, [r4, #12]
 800146a:	6020      	str	r0, [r4, #0]
 800146c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001470:	81a3      	strh	r3, [r4, #12]
 8001472:	9b00      	ldr	r3, [sp, #0]
 8001474:	6163      	str	r3, [r4, #20]
 8001476:	9b01      	ldr	r3, [sp, #4]
 8001478:	6120      	str	r0, [r4, #16]
 800147a:	b15b      	cbz	r3, 8001494 <__smakebuf_r+0x74>
 800147c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001480:	4630      	mov	r0, r6
 8001482:	f000 f88d 	bl	80015a0 <_isatty_r>
 8001486:	b128      	cbz	r0, 8001494 <__smakebuf_r+0x74>
 8001488:	89a3      	ldrh	r3, [r4, #12]
 800148a:	f023 0303 	bic.w	r3, r3, #3
 800148e:	f043 0301 	orr.w	r3, r3, #1
 8001492:	81a3      	strh	r3, [r4, #12]
 8001494:	89a0      	ldrh	r0, [r4, #12]
 8001496:	4305      	orrs	r5, r0
 8001498:	81a5      	strh	r5, [r4, #12]
 800149a:	e7cd      	b.n	8001438 <__smakebuf_r+0x18>
 800149c:	0800078d 	.word	0x0800078d

080014a0 <__malloc_lock>:
 80014a0:	4801      	ldr	r0, [pc, #4]	; (80014a8 <__malloc_lock+0x8>)
 80014a2:	f7ff ba45 	b.w	8000930 <__retarget_lock_acquire_recursive>
 80014a6:	bf00      	nop
 80014a8:	20000090 	.word	0x20000090

080014ac <__malloc_unlock>:
 80014ac:	4801      	ldr	r0, [pc, #4]	; (80014b4 <__malloc_unlock+0x8>)
 80014ae:	f7ff ba40 	b.w	8000932 <__retarget_lock_release_recursive>
 80014b2:	bf00      	nop
 80014b4:	20000090 	.word	0x20000090

080014b8 <_free_r>:
 80014b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80014ba:	2900      	cmp	r1, #0
 80014bc:	d048      	beq.n	8001550 <_free_r+0x98>
 80014be:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80014c2:	9001      	str	r0, [sp, #4]
 80014c4:	2b00      	cmp	r3, #0
 80014c6:	f1a1 0404 	sub.w	r4, r1, #4
 80014ca:	bfb8      	it	lt
 80014cc:	18e4      	addlt	r4, r4, r3
 80014ce:	f7ff ffe7 	bl	80014a0 <__malloc_lock>
 80014d2:	4a20      	ldr	r2, [pc, #128]	; (8001554 <_free_r+0x9c>)
 80014d4:	9801      	ldr	r0, [sp, #4]
 80014d6:	6813      	ldr	r3, [r2, #0]
 80014d8:	4615      	mov	r5, r2
 80014da:	b933      	cbnz	r3, 80014ea <_free_r+0x32>
 80014dc:	6063      	str	r3, [r4, #4]
 80014de:	6014      	str	r4, [r2, #0]
 80014e0:	b003      	add	sp, #12
 80014e2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80014e6:	f7ff bfe1 	b.w	80014ac <__malloc_unlock>
 80014ea:	42a3      	cmp	r3, r4
 80014ec:	d90b      	bls.n	8001506 <_free_r+0x4e>
 80014ee:	6821      	ldr	r1, [r4, #0]
 80014f0:	1862      	adds	r2, r4, r1
 80014f2:	4293      	cmp	r3, r2
 80014f4:	bf04      	itt	eq
 80014f6:	681a      	ldreq	r2, [r3, #0]
 80014f8:	685b      	ldreq	r3, [r3, #4]
 80014fa:	6063      	str	r3, [r4, #4]
 80014fc:	bf04      	itt	eq
 80014fe:	1852      	addeq	r2, r2, r1
 8001500:	6022      	streq	r2, [r4, #0]
 8001502:	602c      	str	r4, [r5, #0]
 8001504:	e7ec      	b.n	80014e0 <_free_r+0x28>
 8001506:	461a      	mov	r2, r3
 8001508:	685b      	ldr	r3, [r3, #4]
 800150a:	b10b      	cbz	r3, 8001510 <_free_r+0x58>
 800150c:	42a3      	cmp	r3, r4
 800150e:	d9fa      	bls.n	8001506 <_free_r+0x4e>
 8001510:	6811      	ldr	r1, [r2, #0]
 8001512:	1855      	adds	r5, r2, r1
 8001514:	42a5      	cmp	r5, r4
 8001516:	d10b      	bne.n	8001530 <_free_r+0x78>
 8001518:	6824      	ldr	r4, [r4, #0]
 800151a:	4421      	add	r1, r4
 800151c:	1854      	adds	r4, r2, r1
 800151e:	42a3      	cmp	r3, r4
 8001520:	6011      	str	r1, [r2, #0]
 8001522:	d1dd      	bne.n	80014e0 <_free_r+0x28>
 8001524:	681c      	ldr	r4, [r3, #0]
 8001526:	685b      	ldr	r3, [r3, #4]
 8001528:	6053      	str	r3, [r2, #4]
 800152a:	4421      	add	r1, r4
 800152c:	6011      	str	r1, [r2, #0]
 800152e:	e7d7      	b.n	80014e0 <_free_r+0x28>
 8001530:	d902      	bls.n	8001538 <_free_r+0x80>
 8001532:	230c      	movs	r3, #12
 8001534:	6003      	str	r3, [r0, #0]
 8001536:	e7d3      	b.n	80014e0 <_free_r+0x28>
 8001538:	6825      	ldr	r5, [r4, #0]
 800153a:	1961      	adds	r1, r4, r5
 800153c:	428b      	cmp	r3, r1
 800153e:	bf04      	itt	eq
 8001540:	6819      	ldreq	r1, [r3, #0]
 8001542:	685b      	ldreq	r3, [r3, #4]
 8001544:	6063      	str	r3, [r4, #4]
 8001546:	bf04      	itt	eq
 8001548:	1949      	addeq	r1, r1, r5
 800154a:	6021      	streq	r1, [r4, #0]
 800154c:	6054      	str	r4, [r2, #4]
 800154e:	e7c7      	b.n	80014e0 <_free_r+0x28>
 8001550:	b003      	add	sp, #12
 8001552:	bd30      	pop	{r4, r5, pc}
 8001554:	20000084 	.word	0x20000084

08001558 <_read_r>:
 8001558:	b538      	push	{r3, r4, r5, lr}
 800155a:	4d07      	ldr	r5, [pc, #28]	; (8001578 <_read_r+0x20>)
 800155c:	4604      	mov	r4, r0
 800155e:	4608      	mov	r0, r1
 8001560:	4611      	mov	r1, r2
 8001562:	2200      	movs	r2, #0
 8001564:	602a      	str	r2, [r5, #0]
 8001566:	461a      	mov	r2, r3
 8001568:	f7fe ff3c 	bl	80003e4 <_read>
 800156c:	1c43      	adds	r3, r0, #1
 800156e:	d102      	bne.n	8001576 <_read_r+0x1e>
 8001570:	682b      	ldr	r3, [r5, #0]
 8001572:	b103      	cbz	r3, 8001576 <_read_r+0x1e>
 8001574:	6023      	str	r3, [r4, #0]
 8001576:	bd38      	pop	{r3, r4, r5, pc}
 8001578:	20000098 	.word	0x20000098

0800157c <_fstat_r>:
 800157c:	b538      	push	{r3, r4, r5, lr}
 800157e:	4d07      	ldr	r5, [pc, #28]	; (800159c <_fstat_r+0x20>)
 8001580:	2300      	movs	r3, #0
 8001582:	4604      	mov	r4, r0
 8001584:	4608      	mov	r0, r1
 8001586:	4611      	mov	r1, r2
 8001588:	602b      	str	r3, [r5, #0]
 800158a:	f7fe ff70 	bl	800046e <_fstat>
 800158e:	1c43      	adds	r3, r0, #1
 8001590:	d102      	bne.n	8001598 <_fstat_r+0x1c>
 8001592:	682b      	ldr	r3, [r5, #0]
 8001594:	b103      	cbz	r3, 8001598 <_fstat_r+0x1c>
 8001596:	6023      	str	r3, [r4, #0]
 8001598:	bd38      	pop	{r3, r4, r5, pc}
 800159a:	bf00      	nop
 800159c:	20000098 	.word	0x20000098

080015a0 <_isatty_r>:
 80015a0:	b538      	push	{r3, r4, r5, lr}
 80015a2:	4d06      	ldr	r5, [pc, #24]	; (80015bc <_isatty_r+0x1c>)
 80015a4:	2300      	movs	r3, #0
 80015a6:	4604      	mov	r4, r0
 80015a8:	4608      	mov	r0, r1
 80015aa:	602b      	str	r3, [r5, #0]
 80015ac:	f7fe ff6f 	bl	800048e <_isatty>
 80015b0:	1c43      	adds	r3, r0, #1
 80015b2:	d102      	bne.n	80015ba <_isatty_r+0x1a>
 80015b4:	682b      	ldr	r3, [r5, #0]
 80015b6:	b103      	cbz	r3, 80015ba <_isatty_r+0x1a>
 80015b8:	6023      	str	r3, [r4, #0]
 80015ba:	bd38      	pop	{r3, r4, r5, pc}
 80015bc:	20000098 	.word	0x20000098

080015c0 <_init>:
 80015c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015c2:	bf00      	nop
 80015c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015c6:	bc08      	pop	{r3}
 80015c8:	469e      	mov	lr, r3
 80015ca:	4770      	bx	lr

080015cc <_fini>:
 80015cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ce:	bf00      	nop
 80015d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015d2:	bc08      	pop	{r3}
 80015d4:	469e      	mov	lr, r3
 80015d6:	4770      	bx	lr
